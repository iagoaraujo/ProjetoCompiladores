/*
 * generated by Xtext
 */
package org.xtext.java.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.java.services.JavaGrammarAccess;

public class JavaParser extends AbstractContentAssistParser {
	
	@Inject
	private JavaGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.java.ui.contentassist.antlr.internal.InternalJavaParser createParser() {
		org.xtext.java.ui.contentassist.antlr.internal.InternalJavaParser result = new org.xtext.java.ui.contentassist.antlr.internal.InternalJavaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getType_declarationAccess().getAlternatives_1(), "rule__Type_declaration__Alternatives_1");
					put(grammarAccess.getField_declarationAccess().getAlternatives(), "rule__Field_declaration__Alternatives");
					put(grammarAccess.getField_declarationAccess().getAlternatives_0_1(), "rule__Field_declaration__Alternatives_0_1");
					put(grammarAccess.getMethod_declarationAccess().getAlternatives_6(), "rule__Method_declaration__Alternatives_6");
					put(grammarAccess.getMethod_declarationAccess().getAlternatives_7(), "rule__Method_declaration__Alternatives_7");
					put(grammarAccess.getParameterAccess().getAlternatives_2(), "rule__Parameter__Alternatives_2");
					put(grammarAccess.getVariable_declaratorAccess().getAlternatives_1(), "rule__Variable_declarator__Alternatives_1");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getExpression_auxAccess().getAlternatives(), "rule__Expression_aux__Alternatives");
					put(grammarAccess.getLiteral_ExpressionAccess().getAlternatives(), "rule__Literal_Expression__Alternatives");
					put(grammarAccess.getLiteral_ExpressionAccess().getAlternatives_0(), "rule__Literal_Expression__Alternatives_0");
					put(grammarAccess.getCreating_ExpressionAccess().getAlternatives_1(), "rule__Creating_Expression__Alternatives_1");
					put(grammarAccess.getCreating_ExpressionAccess().getAlternatives_1_1_2(), "rule__Creating_Expression__Alternatives_1_1_2");
					put(grammarAccess.getLogical_ExpressionAccess().getAlternatives(), "rule__Logical_Expression__Alternatives");
					put(grammarAccess.getNumeric_ExpressionAccess().getSinalAlternatives_0_0(), "rule__Numeric_Expression__SinalAlternatives_0_0");
					put(grammarAccess.getTypeAccess().getAlternatives_1(), "rule__Type__Alternatives_1");
					put(grammarAccess.getType_specifierAccess().getAlternatives(), "rule__Type_specifier__Alternatives");
					put(grammarAccess.getModifierAccess().getAlternatives(), "rule__Modifier__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getSwitch_StatementAccess().getAlternatives_6(), "rule__Switch_Statement__Alternatives_6");
					put(grammarAccess.getFor_StatementAccess().getAlternatives_2(), "rule__For_Statement__Alternatives_2");
					put(grammarAccess.getImport_statementAccess().getAlternatives_1(), "rule__Import_statement__Alternatives_1");
					put(grammarAccess.getCompilation_unitAccess().getGroup(), "rule__Compilation_unit__Group__0");
					put(grammarAccess.getType_declarationAccess().getGroup(), "rule__Type_declaration__Group__0");
					put(grammarAccess.getInterface_declarationAccess().getGroup(), "rule__Interface_declaration__Group__0");
					put(grammarAccess.getInterface_declarationAccess().getGroup_3(), "rule__Interface_declaration__Group_3__0");
					put(grammarAccess.getInterface_declarationAccess().getGroup_3_2(), "rule__Interface_declaration__Group_3_2__0");
					put(grammarAccess.getClass_declarationAccess().getGroup(), "rule__Class_declaration__Group__0");
					put(grammarAccess.getClass_declarationAccess().getGroup_3(), "rule__Class_declaration__Group_3__0");
					put(grammarAccess.getClass_declarationAccess().getGroup_4(), "rule__Class_declaration__Group_4__0");
					put(grammarAccess.getClass_declarationAccess().getGroup_4_2(), "rule__Class_declaration__Group_4_2__0");
					put(grammarAccess.getField_declarationAccess().getGroup_0(), "rule__Field_declaration__Group_0__0");
					put(grammarAccess.getMethod_declarationAccess().getGroup(), "rule__Method_declaration__Group__0");
					put(grammarAccess.getMethod_declarationAccess().getGroup_6_0(), "rule__Method_declaration__Group_6_0__0");
					put(grammarAccess.getConstructor_declarationAccess().getGroup(), "rule__Constructor_declaration__Group__0");
					put(grammarAccess.getParameter_listAccess().getGroup(), "rule__Parameter_list__Group__0");
					put(grammarAccess.getParameter_listAccess().getGroup_1(), "rule__Parameter_list__Group_1__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getParameterAccess().getGroup_2_0(), "rule__Parameter__Group_2_0__0");
					put(grammarAccess.getVariable_declarationAccess().getGroup(), "rule__Variable_declaration__Group__0");
					put(grammarAccess.getVariable_declarationAccess().getGroup_3(), "rule__Variable_declaration__Group_3__0");
					put(grammarAccess.getVariable_declaratorAccess().getGroup(), "rule__Variable_declarator__Group__0");
					put(grammarAccess.getVariable_declaratorAccess().getGroup_1_0(), "rule__Variable_declarator__Group_1_0__0");
					put(grammarAccess.getVariable_declaratorAccess().getGroup_2(), "rule__Variable_declarator__Group_2__0");
					put(grammarAccess.getExpressionAccess().getGroup_0(), "rule__Expression__Group_0__0");
					put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
					put(grammarAccess.getExpressionAccess().getGroup_2(), "rule__Expression__Group_2__0");
					put(grammarAccess.getExpressionAccess().getGroup_3(), "rule__Expression__Group_3__0");
					put(grammarAccess.getExpressionAccess().getGroup_3_0(), "rule__Expression__Group_3_0__0");
					put(grammarAccess.getExpressionAccess().getGroup_4(), "rule__Expression__Group_4__0");
					put(grammarAccess.getExpressionAccess().getGroup_4_0(), "rule__Expression__Group_4_0__0");
					put(grammarAccess.getExpressionAccess().getGroup_5(), "rule__Expression__Group_5__0");
					put(grammarAccess.getExpressionAccess().getGroup_5_0(), "rule__Expression__Group_5_0__0");
					put(grammarAccess.getExpressionAccess().getGroup_6(), "rule__Expression__Group_6__0");
					put(grammarAccess.getExpressionAccess().getGroup_7(), "rule__Expression__Group_7__0");
					put(grammarAccess.getExpressionAccess().getGroup_8(), "rule__Expression__Group_8__0");
					put(grammarAccess.getExpressionAccess().getGroup_9(), "rule__Expression__Group_9__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_0(), "rule__Expression_aux__Group_0__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_0_0(), "rule__Expression_aux__Group_0_0__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_1(), "rule__Expression_aux__Group_1__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_1_0(), "rule__Expression_aux__Group_1_0__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_2(), "rule__Expression_aux__Group_2__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_2_0(), "rule__Expression_aux__Group_2_0__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_3(), "rule__Expression_aux__Group_3__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_3_0(), "rule__Expression_aux__Group_3_0__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_4(), "rule__Expression_aux__Group_4__0");
					put(grammarAccess.getExpression_auxAccess().getGroup_4_0(), "rule__Expression_aux__Group_4_0__0");
					put(grammarAccess.getFloat_LiteralAccess().getGroup(), "rule__Float_Literal__Group__0");
					put(grammarAccess.getLiteral_ExpressionAccess().getGroup_0_0(), "rule__Literal_Expression__Group_0_0__0");
					put(grammarAccess.getLiteral_ExpressionAccess().getGroup_0_1(), "rule__Literal_Expression__Group_0_1__0");
					put(grammarAccess.getCreating_ExpressionAccess().getGroup(), "rule__Creating_Expression__Group__0");
					put(grammarAccess.getCreating_ExpressionAccess().getGroup_1_0(), "rule__Creating_Expression__Group_1_0__0");
					put(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1(), "rule__Creating_Expression__Group_1_1__0");
					put(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1_1(), "rule__Creating_Expression__Group_1_1_1__0");
					put(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1_2_0(), "rule__Creating_Expression__Group_1_1_2_0__0");
					put(grammarAccess.getCreating_ExpressionAccess().getGroup_1_2(), "rule__Creating_Expression__Group_1_2__0");
					put(grammarAccess.getCast_ExpressionAccess().getGroup(), "rule__Cast_Expression__Group__0");
					put(grammarAccess.getBit_ExpressionAccess().getGroup(), "rule__Bit_Expression__Group__0");
					put(grammarAccess.getLogical_ExpressionAccess().getGroup_0(), "rule__Logical_Expression__Group_0__0");
					put(grammarAccess.getArg_ListAccess().getGroup(), "rule__Arg_List__Group__0");
					put(grammarAccess.getArg_ListAccess().getGroup_1(), "rule__Arg_List__Group_1__0");
					put(grammarAccess.getNumeric_ExpressionAccess().getGroup(), "rule__Numeric_Expression__Group__0");
					put(grammarAccess.getTypeAccess().getGroup(), "rule__Type__Group__0");
					put(grammarAccess.getTypeAccess().getGroup_1_0(), "rule__Type__Group_1_0__0");
					put(grammarAccess.getStatic_initializerAccess().getGroup(), "rule__Static_initializer__Group__0");
					put(grammarAccess.getStatement_blockAccess().getGroup(), "rule__Statement_block__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_6(), "rule__Statement__Group_6__0");
					put(grammarAccess.getStatementAccess().getGroup_7(), "rule__Statement__Group_7__0");
					put(grammarAccess.getStatementAccess().getGroup_7_1(), "rule__Statement__Group_7_1__0");
					put(grammarAccess.getStatementAccess().getGroup_8(), "rule__Statement__Group_8__0");
					put(grammarAccess.getStatementAccess().getGroup_11(), "rule__Statement__Group_11__0");
					put(grammarAccess.getStatementAccess().getGroup_12(), "rule__Statement__Group_12__0");
					put(grammarAccess.getStatementAccess().getGroup_13(), "rule__Statement__Group_13__0");
					put(grammarAccess.getStatementAccess().getGroup_14(), "rule__Statement__Group_14__0");
					put(grammarAccess.getSwitch_StatementAccess().getGroup(), "rule__Switch_Statement__Group__0");
					put(grammarAccess.getSwitch_StatementAccess().getGroup_6_0(), "rule__Switch_Statement__Group_6_0__0");
					put(grammarAccess.getSwitch_StatementAccess().getGroup_6_1(), "rule__Switch_Statement__Group_6_1__0");
					put(grammarAccess.getFor_StatementAccess().getGroup(), "rule__For_Statement__Group__0");
					put(grammarAccess.getFor_StatementAccess().getGroup_2_2(), "rule__For_Statement__Group_2_2__0");
					put(grammarAccess.getWhile_StatementAccess().getGroup(), "rule__While_Statement__Group__0");
					put(grammarAccess.getDo_StatementAccess().getGroup(), "rule__Do_Statement__Group__0");
					put(grammarAccess.getIf_StatementAccess().getGroup(), "rule__If_Statement__Group__0");
					put(grammarAccess.getIf_StatementAccess().getGroup_5(), "rule__If_Statement__Group_5__0");
					put(grammarAccess.getTry_statementAccess().getGroup(), "rule__Try_statement__Group__0");
					put(grammarAccess.getTry_statementAccess().getGroup_2(), "rule__Try_statement__Group_2__0");
					put(grammarAccess.getTry_statementAccess().getGroup_3(), "rule__Try_statement__Group_3__0");
					put(grammarAccess.getPackage_statementAccess().getGroup(), "rule__Package_statement__Group__0");
					put(grammarAccess.getPackage_nameAccess().getGroup(), "rule__Package_name__Group__0");
					put(grammarAccess.getPackage_name_auxAccess().getGroup(), "rule__Package_name_aux__Group__0");
					put(grammarAccess.getImport_statementAccess().getGroup(), "rule__Import_statement__Group__0");
					put(grammarAccess.getImport_statementAccess().getGroup_1_0(), "rule__Import_statement__Group_1_0__0");
					put(grammarAccess.getImport_statementAccess().getGroup_1_1(), "rule__Import_statement__Group_1_1__0");
					put(grammarAccess.getHeadAccess().getElementsAssignment(), "rule__Head__ElementsAssignment");
					put(grammarAccess.getCompilation_unitAccess().getPackageAssignment_1(), "rule__Compilation_unit__PackageAssignment_1");
					put(grammarAccess.getCompilation_unitAccess().getImportsAssignment_2(), "rule__Compilation_unit__ImportsAssignment_2");
					put(grammarAccess.getCompilation_unitAccess().getType_declarationsAssignment_3(), "rule__Compilation_unit__Type_declarationsAssignment_3");
					put(grammarAccess.getType_declarationAccess().getDocAssignment_0(), "rule__Type_declaration__DocAssignment_0");
					put(grammarAccess.getType_declarationAccess().getNameAssignment_1_0(), "rule__Type_declaration__NameAssignment_1_0");
					put(grammarAccess.getType_declarationAccess().getNameAssignment_1_1(), "rule__Type_declaration__NameAssignment_1_1");
					put(grammarAccess.getInterface_declarationAccess().getModifiersAssignment_0(), "rule__Interface_declaration__ModifiersAssignment_0");
					put(grammarAccess.getInterface_declarationAccess().getInterfaceNameAssignment_2(), "rule__Interface_declaration__InterfaceNameAssignment_2");
					put(grammarAccess.getInterface_declarationAccess().getExtendAssignment_3_1(), "rule__Interface_declaration__ExtendAssignment_3_1");
					put(grammarAccess.getInterface_declarationAccess().getExtendsAssignment_3_2_1(), "rule__Interface_declaration__ExtendsAssignment_3_2_1");
					put(grammarAccess.getClass_declarationAccess().getModifiersAssignment_0(), "rule__Class_declaration__ModifiersAssignment_0");
					put(grammarAccess.getClass_declarationAccess().getClassNameAssignment_2(), "rule__Class_declaration__ClassNameAssignment_2");
					put(grammarAccess.getClass_declarationAccess().getExtendAssignment_3_1(), "rule__Class_declaration__ExtendAssignment_3_1");
					put(grammarAccess.getClass_declarationAccess().getImplementAssignment_4_1(), "rule__Class_declaration__ImplementAssignment_4_1");
					put(grammarAccess.getClass_declarationAccess().getImplementsAssignment_4_2_1(), "rule__Class_declaration__ImplementsAssignment_4_2_1");
					put(grammarAccess.getClass_declarationAccess().getFieldsAssignment_6(), "rule__Class_declaration__FieldsAssignment_6");
					put(grammarAccess.getField_declarationAccess().getDocAssignment_0_0(), "rule__Field_declaration__DocAssignment_0_0");
					put(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_0(), "rule__Field_declaration__NameAssignment_0_1_0");
					put(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_1(), "rule__Field_declaration__NameAssignment_0_1_1");
					put(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_2(), "rule__Field_declaration__NameAssignment_0_1_2");
					put(grammarAccess.getField_declarationAccess().getNameAssignment_1(), "rule__Field_declaration__NameAssignment_1");
					put(grammarAccess.getField_declarationAccess().getDebugAssignment_2(), "rule__Field_declaration__DebugAssignment_2");
					put(grammarAccess.getMethod_declarationAccess().getModifiersAssignment_0(), "rule__Method_declaration__ModifiersAssignment_0");
					put(grammarAccess.getMethod_declarationAccess().getTypeAssignment_1(), "rule__Method_declaration__TypeAssignment_1");
					put(grammarAccess.getMethod_declarationAccess().getNameAssignment_2(), "rule__Method_declaration__NameAssignment_2");
					put(grammarAccess.getMethod_declarationAccess().getParameterAssignment_4(), "rule__Method_declaration__ParameterAssignment_4");
					put(grammarAccess.getMethod_declarationAccess().getStatementAssignment_7_0(), "rule__Method_declaration__StatementAssignment_7_0");
					put(grammarAccess.getMethod_declarationAccess().getDebugAssignment_7_1(), "rule__Method_declaration__DebugAssignment_7_1");
					put(grammarAccess.getConstructor_declarationAccess().getModifiersAssignment_0(), "rule__Constructor_declaration__ModifiersAssignment_0");
					put(grammarAccess.getConstructor_declarationAccess().getNameAssignment_1(), "rule__Constructor_declaration__NameAssignment_1");
					put(grammarAccess.getConstructor_declarationAccess().getParametersAssignment_3(), "rule__Constructor_declaration__ParametersAssignment_3");
					put(grammarAccess.getConstructor_declarationAccess().getStatementAssignment_5(), "rule__Constructor_declaration__StatementAssignment_5");
					put(grammarAccess.getParameter_listAccess().getParameterAssignment_0(), "rule__Parameter_list__ParameterAssignment_0");
					put(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1(), "rule__Parameter_list__ParametersAssignment_1_1");
					put(grammarAccess.getParameterAccess().getTypeAssignment_0(), "rule__Parameter__TypeAssignment_0");
					put(grammarAccess.getParameterAccess().getNameAssignment_1(), "rule__Parameter__NameAssignment_1");
					put(grammarAccess.getVariable_declarationAccess().getModifiersAssignment_0(), "rule__Variable_declaration__ModifiersAssignment_0");
					put(grammarAccess.getVariable_declarationAccess().getTypeAssignment_1(), "rule__Variable_declaration__TypeAssignment_1");
					put(grammarAccess.getVariable_declarationAccess().getNameAssignment_2(), "rule__Variable_declaration__NameAssignment_2");
					put(grammarAccess.getVariable_declarationAccess().getNamesAssignment_3_1(), "rule__Variable_declaration__NamesAssignment_3_1");
					put(grammarAccess.getVariable_declaratorAccess().getNameAssignment_0(), "rule__Variable_declarator__NameAssignment_0");
					put(grammarAccess.getVariable_declaratorAccess().getInitializerAssignment_2_1(), "rule__Variable_declarator__InitializerAssignment_2_1");
					put(grammarAccess.getVariable_initializerAccess().getExpressionAssignment(), "rule__Variable_initializer__ExpressionAssignment");
					put(grammarAccess.getExpressionAccess().getNumericExpressionAssignment_0_0(), "rule__Expression__NumericExpressionAssignment_0_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_0_1(), "rule__Expression__AuxAssignment_0_1");
					put(grammarAccess.getExpressionAccess().getLogicalExpressionAssignment_1_0(), "rule__Expression__LogicalExpressionAssignment_1_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_1_1(), "rule__Expression__AuxAssignment_1_1");
					put(grammarAccess.getExpressionAccess().getBitExpressionAssignment_2_0(), "rule__Expression__BitExpressionAssignment_2_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_2_1(), "rule__Expression__AuxAssignment_2_1");
					put(grammarAccess.getExpressionAccess().getCastExpressionAssignment_3_0_0(), "rule__Expression__CastExpressionAssignment_3_0_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_3_1(), "rule__Expression__AuxAssignment_3_1");
					put(grammarAccess.getExpressionAccess().getCreatingExpressionAssignment_4_0_0(), "rule__Expression__CreatingExpressionAssignment_4_0_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_4_1(), "rule__Expression__AuxAssignment_4_1");
					put(grammarAccess.getExpressionAccess().getLiteralExpressionAssignment_5_0_0(), "rule__Expression__LiteralExpressionAssignment_5_0_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_5_1(), "rule__Expression__AuxAssignment_5_1");
					put(grammarAccess.getExpressionAccess().getNullAssignment_6_0(), "rule__Expression__NullAssignment_6_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_6_1(), "rule__Expression__AuxAssignment_6_1");
					put(grammarAccess.getExpressionAccess().getSuperAssignment_7_0(), "rule__Expression__SuperAssignment_7_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_7_1(), "rule__Expression__AuxAssignment_7_1");
					put(grammarAccess.getExpressionAccess().getThisAssignment_8_0(), "rule__Expression__ThisAssignment_8_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_8_1(), "rule__Expression__AuxAssignment_8_1");
					put(grammarAccess.getExpressionAccess().getNameAssignment_9_0(), "rule__Expression__NameAssignment_9_0");
					put(grammarAccess.getExpressionAccess().getAuxAssignment_9_1(), "rule__Expression__AuxAssignment_9_1");
					put(grammarAccess.getExpression_auxAccess().getArgListAssignment_0_0_1(), "rule__Expression_aux__ArgListAssignment_0_0_1");
					put(grammarAccess.getExpression_auxAccess().getAux1Assignment_0_1(), "rule__Expression_aux__Aux1Assignment_0_1");
					put(grammarAccess.getExpression_auxAccess().getExpression2Assignment_1_0_1(), "rule__Expression_aux__Expression2Assignment_1_0_1");
					put(grammarAccess.getExpression_auxAccess().getAux2Assignment_1_1(), "rule__Expression_aux__Aux2Assignment_1_1");
					put(grammarAccess.getExpression_auxAccess().getExpression2Assignment_2_0_1(), "rule__Expression_aux__Expression2Assignment_2_0_1");
					put(grammarAccess.getExpression_auxAccess().getAux3Assignment_2_1(), "rule__Expression_aux__Aux3Assignment_2_1");
					put(grammarAccess.getExpression_auxAccess().getExpressionAssignment_3_0_1(), "rule__Expression_aux__ExpressionAssignment_3_0_1");
					put(grammarAccess.getExpression_auxAccess().getAux4Assignment_3_1(), "rule__Expression_aux__Aux4Assignment_3_1");
					put(grammarAccess.getExpression_auxAccess().getNameAssignment_4_0_1(), "rule__Expression_aux__NameAssignment_4_0_1");
					put(grammarAccess.getExpression_auxAccess().getAux5Assignment_4_1(), "rule__Expression_aux__Aux5Assignment_4_1");
					put(grammarAccess.getFloat_LiteralAccess().getDecimalDigits1Assignment_0(), "rule__Float_Literal__DecimalDigits1Assignment_0");
					put(grammarAccess.getFloat_LiteralAccess().getDecimalDigits2Assignment_2(), "rule__Float_Literal__DecimalDigits2Assignment_2");
					put(grammarAccess.getFloat_LiteralAccess().getExpAssignment_3(), "rule__Float_Literal__ExpAssignment_3");
					put(grammarAccess.getFloat_LiteralAccess().getFloatTypeSufixAssignment_4(), "rule__Float_Literal__FloatTypeSufixAssignment_4");
					put(grammarAccess.getLiteral_ExpressionAccess().getExpAssignment_0_0_0(), "rule__Literal_Expression__ExpAssignment_0_0_0");
					put(grammarAccess.getLiteral_ExpressionAccess().getExp1Assignment_0_1_0(), "rule__Literal_Expression__Exp1Assignment_0_1_0");
					put(grammarAccess.getLiteral_ExpressionAccess().getExp2Assignment_1(), "rule__Literal_Expression__Exp2Assignment_1");
					put(grammarAccess.getLiteral_ExpressionAccess().getStringAssignment_2(), "rule__Literal_Expression__StringAssignment_2");
					put(grammarAccess.getLiteral_ExpressionAccess().getCharAssignment_3(), "rule__Literal_Expression__CharAssignment_3");
					put(grammarAccess.getCreating_ExpressionAccess().getClassNameAssignment_1_0_0(), "rule__Creating_Expression__ClassNameAssignment_1_0_0");
					put(grammarAccess.getCreating_ExpressionAccess().getArgListAssignment_1_0_2(), "rule__Creating_Expression__ArgListAssignment_1_0_2");
					put(grammarAccess.getCreating_ExpressionAccess().getTypeSpecifierAssignment_1_1_0(), "rule__Creating_Expression__TypeSpecifierAssignment_1_1_0");
					put(grammarAccess.getCreating_ExpressionAccess().getExpressionAssignment_1_1_1_1(), "rule__Creating_Expression__ExpressionAssignment_1_1_1_1");
					put(grammarAccess.getCreating_ExpressionAccess().getExpressionAssignment_1_2_1(), "rule__Creating_Expression__ExpressionAssignment_1_2_1");
					put(grammarAccess.getCast_ExpressionAccess().getTypeAssignment_1(), "rule__Cast_Expression__TypeAssignment_1");
					put(grammarAccess.getCast_ExpressionAccess().getExpressionAssignment_3(), "rule__Cast_Expression__ExpressionAssignment_3");
					put(grammarAccess.getBit_ExpressionAccess().getExpressionAssignment_1(), "rule__Bit_Expression__ExpressionAssignment_1");
					put(grammarAccess.getLogical_ExpressionAccess().getExpressionAssignment_0_1(), "rule__Logical_Expression__ExpressionAssignment_0_1");
					put(grammarAccess.getLogical_ExpressionAccess().getTrueAssignment_1(), "rule__Logical_Expression__TrueAssignment_1");
					put(grammarAccess.getLogical_ExpressionAccess().getFalseAssignment_2(), "rule__Logical_Expression__FalseAssignment_2");
					put(grammarAccess.getArg_ListAccess().getExpressionAssignment_0(), "rule__Arg_List__ExpressionAssignment_0");
					put(grammarAccess.getArg_ListAccess().getExpressionsAssignment_1_1(), "rule__Arg_List__ExpressionsAssignment_1_1");
					put(grammarAccess.getNumeric_ExpressionAccess().getSinalAssignment_0(), "rule__Numeric_Expression__SinalAssignment_0");
					put(grammarAccess.getNumeric_ExpressionAccess().getExpressionAssignment_1(), "rule__Numeric_Expression__ExpressionAssignment_1");
					put(grammarAccess.getTypeAccess().getNameAssignment_0(), "rule__Type__NameAssignment_0");
					put(grammarAccess.getStatic_initializerAccess().getStaticAssignment_0(), "rule__Static_initializer__StaticAssignment_0");
					put(grammarAccess.getStatic_initializerAccess().getNameAssignment_1(), "rule__Static_initializer__NameAssignment_1");
					put(grammarAccess.getStatement_blockAccess().getStatementsAssignment_2(), "rule__Statement_block__StatementsAssignment_2");
					put(grammarAccess.getStatementAccess().getVariableAssignment_0(), "rule__Statement__VariableAssignment_0");
					put(grammarAccess.getStatementAccess().getIfStatementAssignment_1(), "rule__Statement__IfStatementAssignment_1");
					put(grammarAccess.getStatementAccess().getDoStatementAssignment_2(), "rule__Statement__DoStatementAssignment_2");
					put(grammarAccess.getStatementAccess().getWhileStatementAssignment_3(), "rule__Statement__WhileStatementAssignment_3");
					put(grammarAccess.getStatementAccess().getForStatementAssignment_4(), "rule__Statement__ForStatementAssignment_4");
					put(grammarAccess.getStatementAccess().getSwitchStatementAssignment_5(), "rule__Statement__SwitchStatementAssignment_5");
					put(grammarAccess.getStatementAccess().getExpressionAssignment_6_2(), "rule__Statement__ExpressionAssignment_6_2");
					put(grammarAccess.getStatementAccess().getStatementAssignment_6_4(), "rule__Statement__StatementAssignment_6_4");
					put(grammarAccess.getStatementAccess().getExpressionAssignment_7_1_1(), "rule__Statement__ExpressionAssignment_7_1_1");
					put(grammarAccess.getStatementAccess().getExpressionAssignment_8_1(), "rule__Statement__ExpressionAssignment_8_1");
					put(grammarAccess.getStatementAccess().getTryAssignment_10(), "rule__Statement__TryAssignment_10");
					put(grammarAccess.getStatementAccess().getNameAssignment_11_0(), "rule__Statement__NameAssignment_11_0");
					put(grammarAccess.getStatementAccess().getStatementAssignment_11_2(), "rule__Statement__StatementAssignment_11_2");
					put(grammarAccess.getStatementAccess().getNameAssignment_12_2(), "rule__Statement__NameAssignment_12_2");
					put(grammarAccess.getStatementAccess().getNameAssignment_13_2(), "rule__Statement__NameAssignment_13_2");
					put(grammarAccess.getSwitch_StatementAccess().getExpressionAssignment_3(), "rule__Switch_Statement__ExpressionAssignment_3");
					put(grammarAccess.getSwitch_StatementAccess().getExpressionsAssignment_6_0_1(), "rule__Switch_Statement__ExpressionsAssignment_6_0_1");
					put(grammarAccess.getSwitch_StatementAccess().getStatementsAssignment_6_2(), "rule__Switch_Statement__StatementsAssignment_6_2");
					put(grammarAccess.getFor_StatementAccess().getVariableAssignment_2_0(), "rule__For_Statement__VariableAssignment_2_0");
					put(grammarAccess.getFor_StatementAccess().getPvAssignment_2_1(), "rule__For_Statement__PvAssignment_2_1");
					put(grammarAccess.getFor_StatementAccess().getExpressionAssignment_2_2_0(), "rule__For_Statement__ExpressionAssignment_2_2_0");
					put(grammarAccess.getFor_StatementAccess().getExpression2Assignment_3(), "rule__For_Statement__Expression2Assignment_3");
					put(grammarAccess.getFor_StatementAccess().getExpression3Assignment_5(), "rule__For_Statement__Expression3Assignment_5");
					put(grammarAccess.getFor_StatementAccess().getStatementAssignment_8(), "rule__For_Statement__StatementAssignment_8");
					put(grammarAccess.getWhile_StatementAccess().getExpressionAssignment_2(), "rule__While_Statement__ExpressionAssignment_2");
					put(grammarAccess.getWhile_StatementAccess().getStatementAssignment_4(), "rule__While_Statement__StatementAssignment_4");
					put(grammarAccess.getDo_StatementAccess().getStatementAssignment_1(), "rule__Do_Statement__StatementAssignment_1");
					put(grammarAccess.getDo_StatementAccess().getExpressionAssignment_4(), "rule__Do_Statement__ExpressionAssignment_4");
					put(grammarAccess.getIf_StatementAccess().getExpressionAssignment_2(), "rule__If_Statement__ExpressionAssignment_2");
					put(grammarAccess.getIf_StatementAccess().getStatementAssignment_4(), "rule__If_Statement__StatementAssignment_4");
					put(grammarAccess.getIf_StatementAccess().getElseStatementAssignment_5_1(), "rule__If_Statement__ElseStatementAssignment_5_1");
					put(grammarAccess.getTry_statementAccess().getTryAssignment_0(), "rule__Try_statement__TryAssignment_0");
					put(grammarAccess.getTry_statementAccess().getTryStatementAssignment_1(), "rule__Try_statement__TryStatementAssignment_1");
					put(grammarAccess.getTry_statementAccess().getCatchsAssignment_2_0(), "rule__Try_statement__CatchsAssignment_2_0");
					put(grammarAccess.getTry_statementAccess().getParametersAssignment_2_2(), "rule__Try_statement__ParametersAssignment_2_2");
					put(grammarAccess.getTry_statementAccess().getCatchStatementsAssignment_2_4(), "rule__Try_statement__CatchStatementsAssignment_2_4");
					put(grammarAccess.getTry_statementAccess().getFinallyAssignment_3_0(), "rule__Try_statement__FinallyAssignment_3_0");
					put(grammarAccess.getTry_statementAccess().getFinallyStatementAssignment_3_1(), "rule__Try_statement__FinallyStatementAssignment_3_1");
					put(grammarAccess.getPackage_statementAccess().getNameAssignment_1(), "rule__Package_statement__NameAssignment_1");
					put(grammarAccess.getImport_statementAccess().getClassnameAssignment_1_0_0(), "rule__Import_statement__ClassnameAssignment_1_0_0");
					put(grammarAccess.getImport_statementAccess().getPackagenameAssignment_1_1_0(), "rule__Import_statement__PackagenameAssignment_1_1_0");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.java.ui.contentassist.antlr.internal.InternalJavaParser typedParser = (org.xtext.java.ui.contentassist.antlr.internal.InternalJavaParser) parser;
			typedParser.entryRuleHead();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public JavaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(JavaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
