/*
 * generated by Xtext
 */
grammar InternalJava;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.java.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.java.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.java.services.JavaGrammarAccess;

}

@parser::members {
 
 	private JavaGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(JavaGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleHead
entryRuleHead 
:
{ before(grammarAccess.getHeadRule()); }
	 ruleHead
{ after(grammarAccess.getHeadRule()); } 
	 EOF 
;

// Rule Head
ruleHead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeadAccess().getElementsAssignment()); }
(rule__Head__ElementsAssignment)
{ after(grammarAccess.getHeadAccess().getElementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompilation_unit
entryRuleCompilation_unit 
:
{ before(grammarAccess.getCompilation_unitRule()); }
	 ruleCompilation_unit
{ after(grammarAccess.getCompilation_unitRule()); } 
	 EOF 
;

// Rule Compilation_unit
ruleCompilation_unit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompilation_unitAccess().getGroup()); }
(rule__Compilation_unit__Group__0)
{ after(grammarAccess.getCompilation_unitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType_declaration
entryRuleType_declaration 
:
{ before(grammarAccess.getType_declarationRule()); }
	 ruleType_declaration
{ after(grammarAccess.getType_declarationRule()); } 
	 EOF 
;

// Rule Type_declaration
ruleType_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_declarationAccess().getGroup()); }
(rule__Type_declaration__Group__0)
{ after(grammarAccess.getType_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface_declaration
entryRuleInterface_declaration 
:
{ before(grammarAccess.getInterface_declarationRule()); }
	 ruleInterface_declaration
{ after(grammarAccess.getInterface_declarationRule()); } 
	 EOF 
;

// Rule Interface_declaration
ruleInterface_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterface_declarationAccess().getGroup()); }
(rule__Interface_declaration__Group__0)
{ after(grammarAccess.getInterface_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass_declaration
entryRuleClass_declaration 
:
{ before(grammarAccess.getClass_declarationRule()); }
	 ruleClass_declaration
{ after(grammarAccess.getClass_declarationRule()); } 
	 EOF 
;

// Rule Class_declaration
ruleClass_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup()); }
(rule__Class_declaration__Group__0)
{ after(grammarAccess.getClass_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField_declaration
entryRuleField_declaration 
:
{ before(grammarAccess.getField_declarationRule()); }
	 ruleField_declaration
{ after(grammarAccess.getField_declarationRule()); } 
	 EOF 
;

// Rule Field_declaration
ruleField_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getField_declarationAccess().getAlternatives()); }
(rule__Field_declaration__Alternatives)
{ after(grammarAccess.getField_declarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod_declaration
entryRuleMethod_declaration 
:
{ before(grammarAccess.getMethod_declarationRule()); }
	 ruleMethod_declaration
{ after(grammarAccess.getMethod_declarationRule()); } 
	 EOF 
;

// Rule Method_declaration
ruleMethod_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethod_declarationAccess().getGroup()); }
(rule__Method_declaration__Group__0)
{ after(grammarAccess.getMethod_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod_call
entryRuleMethod_call 
:
{ before(grammarAccess.getMethod_callRule()); }
	 ruleMethod_call
{ after(grammarAccess.getMethod_callRule()); } 
	 EOF 
;

// Rule Method_call
ruleMethod_call
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethod_callAccess().getGroup()); }
(rule__Method_call__Group__0)
{ after(grammarAccess.getMethod_callAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructor_declaration
entryRuleConstructor_declaration 
:
{ before(grammarAccess.getConstructor_declarationRule()); }
	 ruleConstructor_declaration
{ after(grammarAccess.getConstructor_declarationRule()); } 
	 EOF 
;

// Rule Constructor_declaration
ruleConstructor_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructor_declarationAccess().getGroup()); }
(rule__Constructor_declaration__Group__0)
{ after(grammarAccess.getConstructor_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter_list_method_call
entryRuleParameter_list_method_call 
:
{ before(grammarAccess.getParameter_list_method_callRule()); }
	 ruleParameter_list_method_call
{ after(grammarAccess.getParameter_list_method_callRule()); } 
	 EOF 
;

// Rule Parameter_list_method_call
ruleParameter_list_method_call
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameter_list_method_callAccess().getGroup()); }
(rule__Parameter_list_method_call__Group__0)
{ after(grammarAccess.getParameter_list_method_callAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter_list
entryRuleParameter_list 
:
{ before(grammarAccess.getParameter_listRule()); }
	 ruleParameter_list
{ after(grammarAccess.getParameter_listRule()); } 
	 EOF 
;

// Rule Parameter_list
ruleParameter_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameter_listAccess().getGroup()); }
(rule__Parameter_list__Group__0)
{ after(grammarAccess.getParameter_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable_declaration
entryRuleVariable_declaration 
:
{ before(grammarAccess.getVariable_declarationRule()); }
	 ruleVariable_declaration
{ after(grammarAccess.getVariable_declarationRule()); } 
	 EOF 
;

// Rule Variable_declaration
ruleVariable_declaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup()); }
(rule__Variable_declaration__Group__0)
{ after(grammarAccess.getVariable_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable_declarator
entryRuleVariable_declarator 
:
{ before(grammarAccess.getVariable_declaratorRule()); }
	 ruleVariable_declarator
{ after(grammarAccess.getVariable_declaratorRule()); } 
	 EOF 
;

// Rule Variable_declarator
ruleVariable_declarator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_declaratorAccess().getGroup()); }
(rule__Variable_declarator__Group__0)
{ after(grammarAccess.getVariable_declaratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable_initializer
entryRuleVariable_initializer 
:
{ before(grammarAccess.getVariable_initializerRule()); }
	 ruleVariable_initializer
{ after(grammarAccess.getVariable_initializerRule()); } 
	 EOF 
;

// Rule Variable_initializer
ruleVariable_initializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariable_initializerAccess().getAlternatives()); }
(rule__Variable_initializer__Alternatives)
{ after(grammarAccess.getVariable_initializerAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression_aux
entryRuleExpression_aux 
:
{ before(grammarAccess.getExpression_auxRule()); }
	 ruleExpression_aux
{ after(grammarAccess.getExpression_auxRule()); } 
	 EOF 
;

// Rule Expression_aux
ruleExpression_aux
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpression_auxAccess().getAlternatives()); }
(rule__Expression_aux__Alternatives)
{ after(grammarAccess.getExpression_auxAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAmpersand_Rule
entryRuleAmpersand_Rule 
:
{ before(grammarAccess.getAmpersand_RuleRule()); }
	 ruleAmpersand_Rule
{ after(grammarAccess.getAmpersand_RuleRule()); } 
	 EOF 
;

// Rule Ampersand_Rule
ruleAmpersand_Rule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAmpersand_RuleAccess().getGroup()); }
(rule__Ampersand_Rule__Group__0)
{ after(grammarAccess.getAmpersand_RuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloat_Literal
entryRuleFloat_Literal 
:
{ before(grammarAccess.getFloat_LiteralRule()); }
	 ruleFloat_Literal
{ after(grammarAccess.getFloat_LiteralRule()); } 
	 EOF 
;

// Rule Float_Literal
ruleFloat_Literal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloat_LiteralAccess().getGroup()); }
(rule__Float_Literal__Group__0)
{ after(grammarAccess.getFloat_LiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral_Expression
entryRuleLiteral_Expression 
:
{ before(grammarAccess.getLiteral_ExpressionRule()); }
	 ruleLiteral_Expression
{ after(grammarAccess.getLiteral_ExpressionRule()); } 
	 EOF 
;

// Rule Literal_Expression
ruleLiteral_Expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getAlternatives()); }
(rule__Literal_Expression__Alternatives)
{ after(grammarAccess.getLiteral_ExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCreating_Expression
entryRuleCreating_Expression 
:
{ before(grammarAccess.getCreating_ExpressionRule()); }
	 ruleCreating_Expression
{ after(grammarAccess.getCreating_ExpressionRule()); } 
	 EOF 
;

// Rule Creating_Expression
ruleCreating_Expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getGroup()); }
(rule__Creating_Expression__Group__0)
{ after(grammarAccess.getCreating_ExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast_Expression
entryRuleCast_Expression 
:
{ before(grammarAccess.getCast_ExpressionRule()); }
	 ruleCast_Expression
{ after(grammarAccess.getCast_ExpressionRule()); } 
	 EOF 
;

// Rule Cast_Expression
ruleCast_Expression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCast_ExpressionAccess().getGroup()); }
(rule__Cast_Expression__Group__0)
{ after(grammarAccess.getCast_ExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBit_Expression_NR
entryRuleBit_Expression_NR 
:
{ before(grammarAccess.getBit_Expression_NRRule()); }
	 ruleBit_Expression_NR
{ after(grammarAccess.getBit_Expression_NRRule()); } 
	 EOF 
;

// Rule Bit_Expression_NR
ruleBit_Expression_NR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBit_Expression_NRAccess().getGroup()); }
(rule__Bit_Expression_NR__Group__0)
{ after(grammarAccess.getBit_Expression_NRAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogical_Expression_NR
entryRuleLogical_Expression_NR 
:
{ before(grammarAccess.getLogical_Expression_NRRule()); }
	 ruleLogical_Expression_NR
{ after(grammarAccess.getLogical_Expression_NRRule()); } 
	 EOF 
;

// Rule Logical_Expression_NR
ruleLogical_Expression_NR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogical_Expression_NRAccess().getAlternatives()); }
(rule__Logical_Expression_NR__Alternatives)
{ after(grammarAccess.getLogical_Expression_NRAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArg_List
entryRuleArg_List 
:
{ before(grammarAccess.getArg_ListRule()); }
	 ruleArg_List
{ after(grammarAccess.getArg_ListRule()); } 
	 EOF 
;

// Rule Arg_List
ruleArg_List
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArg_ListAccess().getGroup()); }
(rule__Arg_List__Group__0)
{ after(grammarAccess.getArg_ListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumeric_Expression_NR
entryRuleNumeric_Expression_NR 
:
{ before(grammarAccess.getNumeric_Expression_NRRule()); }
	 ruleNumeric_Expression_NR
{ after(grammarAccess.getNumeric_Expression_NRRule()); } 
	 EOF 
;

// Rule Numeric_Expression_NR
ruleNumeric_Expression_NR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getGroup()); }
(rule__Numeric_Expression_NR__Group__0)
{ after(grammarAccess.getNumeric_Expression_NRAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType_specifier
entryRuleType_specifier 
:
{ before(grammarAccess.getType_specifierRule()); }
	 ruleType_specifier
{ after(grammarAccess.getType_specifierRule()); } 
	 EOF 
;

// Rule Type_specifier
ruleType_specifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getType_specifierAccess().getAlternatives()); }
(rule__Type_specifier__Alternatives)
{ after(grammarAccess.getType_specifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifier
entryRuleModifier 
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierAccess().getAlternatives()); }
(rule__Modifier__Alternatives)
{ after(grammarAccess.getModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatic_initializer
entryRuleStatic_initializer 
:
{ before(grammarAccess.getStatic_initializerRule()); }
	 ruleStatic_initializer
{ after(grammarAccess.getStatic_initializerRule()); } 
	 EOF 
;

// Rule Static_initializer
ruleStatic_initializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatic_initializerAccess().getGroup()); }
(rule__Static_initializer__Group__0)
{ after(grammarAccess.getStatic_initializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement_block
entryRuleStatement_block 
:
{ before(grammarAccess.getStatement_blockRule()); }
	 ruleStatement_block
{ after(grammarAccess.getStatement_blockRule()); } 
	 EOF 
;

// Rule Statement_block
ruleStatement_block
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatement_blockAccess().getGroup()); }
(rule__Statement_block__Group__0)
{ after(grammarAccess.getStatement_blockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitch_Statement
entryRuleSwitch_Statement 
:
{ before(grammarAccess.getSwitch_StatementRule()); }
	 ruleSwitch_Statement
{ after(grammarAccess.getSwitch_StatementRule()); } 
	 EOF 
;

// Rule Switch_Statement
ruleSwitch_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitch_StatementAccess().getGroup()); }
(rule__Switch_Statement__Group__0)
{ after(grammarAccess.getSwitch_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFor_Statement
entryRuleFor_Statement 
:
{ before(grammarAccess.getFor_StatementRule()); }
	 ruleFor_Statement
{ after(grammarAccess.getFor_StatementRule()); } 
	 EOF 
;

// Rule For_Statement
ruleFor_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFor_StatementAccess().getGroup()); }
(rule__For_Statement__Group__0)
{ after(grammarAccess.getFor_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile_Statement
entryRuleWhile_Statement 
:
{ before(grammarAccess.getWhile_StatementRule()); }
	 ruleWhile_Statement
{ after(grammarAccess.getWhile_StatementRule()); } 
	 EOF 
;

// Rule While_Statement
ruleWhile_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhile_StatementAccess().getGroup()); }
(rule__While_Statement__Group__0)
{ after(grammarAccess.getWhile_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDo_Statement
entryRuleDo_Statement 
:
{ before(grammarAccess.getDo_StatementRule()); }
	 ruleDo_Statement
{ after(grammarAccess.getDo_StatementRule()); } 
	 EOF 
;

// Rule Do_Statement
ruleDo_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDo_StatementAccess().getGroup()); }
(rule__Do_Statement__Group__0)
{ after(grammarAccess.getDo_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIf_Statement
entryRuleIf_Statement 
:
{ before(grammarAccess.getIf_StatementRule()); }
	 ruleIf_Statement
{ after(grammarAccess.getIf_StatementRule()); } 
	 EOF 
;

// Rule If_Statement
ruleIf_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIf_StatementAccess().getGroup()); }
(rule__If_Statement__Group__0)
{ after(grammarAccess.getIf_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturn_Statement
entryRuleReturn_Statement 
:
{ before(grammarAccess.getReturn_StatementRule()); }
	 ruleReturn_Statement
{ after(grammarAccess.getReturn_StatementRule()); } 
	 EOF 
;

// Rule Return_Statement
ruleReturn_Statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturn_StatementAccess().getGroup()); }
(rule__Return_Statement__Group__0)
{ after(grammarAccess.getReturn_StatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturn_value
entryRuleReturn_value 
:
{ before(grammarAccess.getReturn_valueRule()); }
	 ruleReturn_value
{ after(grammarAccess.getReturn_valueRule()); } 
	 EOF 
;

// Rule Return_value
ruleReturn_value
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturn_valueAccess().getAlternatives()); }
(rule__Return_value__Alternatives)
{ after(grammarAccess.getReturn_valueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTry_statement
entryRuleTry_statement 
:
{ before(grammarAccess.getTry_statementRule()); }
	 ruleTry_statement
{ after(grammarAccess.getTry_statementRule()); } 
	 EOF 
;

// Rule Try_statement
ruleTry_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTry_statementAccess().getGroup()); }
(rule__Try_statement__Group__0)
{ after(grammarAccess.getTry_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage_statement
entryRulePackage_statement 
:
{ before(grammarAccess.getPackage_statementRule()); }
	 rulePackage_statement
{ after(grammarAccess.getPackage_statementRule()); } 
	 EOF 
;

// Rule Package_statement
rulePackage_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_statementAccess().getGroup()); }
(rule__Package_statement__Group__0)
{ after(grammarAccess.getPackage_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage_name
entryRulePackage_name 
:
{ before(grammarAccess.getPackage_nameRule()); }
	 rulePackage_name
{ after(grammarAccess.getPackage_nameRule()); } 
	 EOF 
;

// Rule Package_name
rulePackage_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_nameAccess().getGroup()); }
(rule__Package_name__Group__0)
{ after(grammarAccess.getPackage_nameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage_name_aux
entryRulePackage_name_aux 
:
{ before(grammarAccess.getPackage_name_auxRule()); }
	 rulePackage_name_aux
{ after(grammarAccess.getPackage_name_auxRule()); } 
	 EOF 
;

// Rule Package_name_aux
rulePackage_name_aux
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackage_name_auxAccess().getGroup()); }
(rule__Package_name_aux__Group__0)*
{ after(grammarAccess.getPackage_name_auxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport_statement
entryRuleImport_statement 
:
{ before(grammarAccess.getImport_statementRule()); }
	 ruleImport_statement
{ after(grammarAccess.getImport_statementRule()); } 
	 EOF 
;

// Rule Import_statement
ruleImport_statement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImport_statementAccess().getGroup()); }
(rule__Import_statement__Group__0)
{ after(grammarAccess.getImport_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass_name
entryRuleClass_name 
:
{ before(grammarAccess.getClass_nameRule()); }
	 ruleClass_name
{ after(grammarAccess.getClass_nameRule()); } 
	 EOF 
;

// Rule Class_name
ruleClass_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClass_nameAccess().getPackage_nameParserRuleCall()); }
	rulePackage_name
{ after(grammarAccess.getClass_nameAccess().getPackage_nameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterface_name
entryRuleInterface_name 
:
{ before(grammarAccess.getInterface_nameRule()); }
	 ruleInterface_name
{ after(grammarAccess.getInterface_nameRule()); } 
	 EOF 
;

// Rule Interface_name
ruleInterface_name
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterface_nameAccess().getPackage_nameParserRuleCall()); }
	rulePackage_name
{ after(grammarAccess.getInterface_nameAccess().getPackage_nameParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPOENT_PART
entryRuleEXPOENT_PART 
:
{ before(grammarAccess.getEXPOENT_PARTRule()); }
	 ruleEXPOENT_PART
{ after(grammarAccess.getEXPOENT_PARTRule()); } 
	 EOF 
;

// Rule EXPOENT_PART
ruleEXPOENT_PART
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPOENT_PARTAccess().getGroup()); }
(rule__EXPOENT_PART__Group__0)
{ after(grammarAccess.getEXPOENT_PARTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type_declaration__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getNameAssignment_1_0()); }
(rule__Type_declaration__NameAssignment_1_0)
{ after(grammarAccess.getType_declarationAccess().getNameAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getType_declarationAccess().getNameAssignment_1_1()); }
(rule__Type_declaration__NameAssignment_1_1)
{ after(grammarAccess.getType_declarationAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getGroup_0()); }
(rule__Field_declaration__Group_0__0)
{ after(grammarAccess.getField_declarationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getNameAssignment_1()); }
(rule__Field_declaration__NameAssignment_1)
{ after(grammarAccess.getField_declarationAccess().getNameAssignment_1()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getNameAssignment_2()); }
(rule__Field_declaration__NameAssignment_2)
{ after(grammarAccess.getField_declarationAccess().getNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getDebugAssignment_3()); }
(rule__Field_declaration__DebugAssignment_3)
{ after(grammarAccess.getField_declarationAccess().getDebugAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_0()); }
(rule__Field_declaration__NameAssignment_0_1_0)
{ after(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_0()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_1()); }
(rule__Field_declaration__NameAssignment_0_1_1)
{ after(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_1()); }
)

    |(
{ before(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_2()); }
(rule__Field_declaration__NameAssignment_0_1_2)
{ after(grammarAccess.getField_declarationAccess().getNameAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getGroup_6_0()); }
(rule__Method_declaration__Group_6_0__0)
{ after(grammarAccess.getMethod_declarationAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getMethod_declarationAccess().getABSTerminalRuleCall_6_1()); }
	RULE_ABS
{ after(grammarAccess.getMethod_declarationAccess().getABSTerminalRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getStatementAssignment_7_0()); }
(rule__Method_declaration__StatementAssignment_7_0)
{ after(grammarAccess.getMethod_declarationAccess().getStatementAssignment_7_0()); }
)

    |(
{ before(grammarAccess.getMethod_declarationAccess().getDebugAssignment_7_1()); }
(rule__Method_declaration__DebugAssignment_7_1)
{ after(grammarAccess.getMethod_declarationAccess().getDebugAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_2_0()); }
(rule__Parameter__Group_2_0__0)
{ after(grammarAccess.getParameterAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getParameterAccess().getABSTerminalRuleCall_2_1()); }
	RULE_ABS
{ after(grammarAccess.getParameterAccess().getABSTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getGroup_1_0()); }
(rule__Variable_declarator__Group_1_0__0)
{ after(grammarAccess.getVariable_declaratorAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getVariable_declaratorAccess().getABSTerminalRuleCall_1_1()); }
	RULE_ABS
{ after(grammarAccess.getVariable_declaratorAccess().getABSTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getExpressionAssignment_0()); }
(rule__Variable_initializer__ExpressionAssignment_0)
{ after(grammarAccess.getVariable_initializerAccess().getExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getVariable_initializerAccess().getGroup_1()); }
(rule__Variable_initializer__Group_1__0)
{ after(grammarAccess.getVariable_initializerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
(rule__Expression__Group_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_2()); }
(rule__Expression__Group_2__0)
{ after(grammarAccess.getExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
(rule__Expression__Group_3__0)
{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_4()); }
(rule__Expression__Group_4__0)
{ after(grammarAccess.getExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_5()); }
(rule__Expression__Group_5__0)
{ after(grammarAccess.getExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_6()); }
(rule__Expression__Group_6__0)
{ after(grammarAccess.getExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_7()); }
(rule__Expression__Group_7__0)
{ after(grammarAccess.getExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_8()); }
(rule__Expression__Group_8__0)
{ after(grammarAccess.getExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_9()); }
(rule__Expression__Group_9__0)
{ after(grammarAccess.getExpressionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getGroup_0()); }
(rule__Expression_aux__Group_0__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_1()); }
(rule__Expression_aux__Group_1__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_2()); }
(rule__Expression_aux__Group_2__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_3()); }
(rule__Expression_aux__Group_3__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_4()); }
(rule__Expression_aux__Group_4__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_5()); }
(rule__Expression_aux__Group_5__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_6()); }
(rule__Expression_aux__Group_6__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_7()); }
(rule__Expression_aux__Group_7__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_8()); }
(rule__Expression_aux__Group_8__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_9()); }
(rule__Expression_aux__Group_9__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_10()); }
(rule__Expression_aux__Group_10__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getGroup_11()); }
(rule__Expression_aux__Group_11__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getExpression_auxAction_12()); }
(

)
{ after(grammarAccess.getExpression_auxAccess().getExpression_auxAction_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__SginAlternatives_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getSginINCREMENTTerminalRuleCall_5_0_0_0()); }
	RULE_INCREMENT
{ after(grammarAccess.getExpression_auxAccess().getSginINCREMENTTerminalRuleCall_5_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getSginDECREMENTTerminalRuleCall_5_0_0_1()); }
	RULE_DECREMENT
{ after(grammarAccess.getExpression_auxAccess().getSginDECREMENTTerminalRuleCall_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__NumericSignAlternatives_6_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignPLUSTerminalRuleCall_6_0_0_0()); }
	RULE_PLUS
{ after(grammarAccess.getExpression_auxAccess().getNumericSignPLUSTerminalRuleCall_6_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignPLUS_EQUALTerminalRuleCall_6_0_0_1()); }
	RULE_PLUS_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getNumericSignPLUS_EQUALTerminalRuleCall_6_0_0_1()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignMINUSTerminalRuleCall_6_0_0_2()); }
	RULE_MINUS
{ after(grammarAccess.getExpression_auxAccess().getNumericSignMINUSTerminalRuleCall_6_0_0_2()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignMINUS_EQUALTerminalRuleCall_6_0_0_3()); }
	RULE_MINUS_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getNumericSignMINUS_EQUALTerminalRuleCall_6_0_0_3()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignMULTIPLYTerminalRuleCall_6_0_0_4()); }
	RULE_MULTIPLY
{ after(grammarAccess.getExpression_auxAccess().getNumericSignMULTIPLYTerminalRuleCall_6_0_0_4()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignMULTIPLY_EQUALTerminalRuleCall_6_0_0_5()); }
	RULE_MULTIPLY_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getNumericSignMULTIPLY_EQUALTerminalRuleCall_6_0_0_5()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignDIVIDETerminalRuleCall_6_0_0_6()); }
	RULE_DIVIDE
{ after(grammarAccess.getExpression_auxAccess().getNumericSignDIVIDETerminalRuleCall_6_0_0_6()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignDIVIDE_EQUALTerminalRuleCall_6_0_0_7()); }
	RULE_DIVIDE_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getNumericSignDIVIDE_EQUALTerminalRuleCall_6_0_0_7()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignMODULETerminalRuleCall_6_0_0_8()); }
	RULE_MODULE
{ after(grammarAccess.getExpression_auxAccess().getNumericSignMODULETerminalRuleCall_6_0_0_8()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignMODULE_EQUALTerminalRuleCall_6_0_0_9()); }
	RULE_MODULE_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getNumericSignMODULE_EQUALTerminalRuleCall_6_0_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__TestingSignAlternatives_7_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignBTTerminalRuleCall_7_0_0_0()); }
	RULE_BT
{ after(grammarAccess.getExpression_auxAccess().getTestingSignBTTerminalRuleCall_7_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignSTTerminalRuleCall_7_0_0_1()); }
	RULE_ST
{ after(grammarAccess.getExpression_auxAccess().getTestingSignSTTerminalRuleCall_7_0_0_1()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignBETerminalRuleCall_7_0_0_2()); }
	RULE_BE
{ after(grammarAccess.getExpression_auxAccess().getTestingSignBETerminalRuleCall_7_0_0_2()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignSETerminalRuleCall_7_0_0_3()); }
	RULE_SE
{ after(grammarAccess.getExpression_auxAccess().getTestingSignSETerminalRuleCall_7_0_0_3()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignDOUBLE_EQUALTerminalRuleCall_7_0_0_4()); }
	RULE_DOUBLE_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getTestingSignDOUBLE_EQUALTerminalRuleCall_7_0_0_4()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignDIFFERENTTerminalRuleCall_7_0_0_5()); }
	RULE_DIFFERENT
{ after(grammarAccess.getExpression_auxAccess().getTestingSignDIFFERENTTerminalRuleCall_7_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Alternatives_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignAssignment_8_0_0()); }
(rule__Expression_aux__LogicalSignAssignment_8_0_0)
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignAssignment_8_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getAmpersandAssignment_8_0_1()); }
(rule__Expression_aux__AmpersandAssignment_8_0_1)
{ after(grammarAccess.getExpression_auxAccess().getAmpersandAssignment_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__LogicalSignAlternatives_8_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignORTerminalRuleCall_8_0_0_0_0()); }
	RULE_OR
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignORTerminalRuleCall_8_0_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignOR_EQUALTerminalRuleCall_8_0_0_0_1()); }
	RULE_OR_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignOR_EQUALTerminalRuleCall_8_0_0_0_1()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignEXPTerminalRuleCall_8_0_0_0_2()); }
	RULE_EXP
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignEXPTerminalRuleCall_8_0_0_0_2()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignEXP_EQUALTerminalRuleCall_8_0_0_0_3()); }
	RULE_EXP_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignEXP_EQUALTerminalRuleCall_8_0_0_0_3()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignDOUBLE_OR_EQUALTerminalRuleCall_8_0_0_0_4()); }
	RULE_DOUBLE_OR_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignDOUBLE_OR_EQUALTerminalRuleCall_8_0_0_0_4()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignMODULETerminalRuleCall_8_0_0_0_5()); }
	RULE_MODULE
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignMODULETerminalRuleCall_8_0_0_0_5()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignMODULE_EQUALTerminalRuleCall_8_0_0_0_6()); }
	RULE_MODULE_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignMODULE_EQUALTerminalRuleCall_8_0_0_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__StringSignAlternatives_10_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getStringSignPLUSTerminalRuleCall_10_0_0_0()); }
	RULE_PLUS
{ after(grammarAccess.getExpression_auxAccess().getStringSignPLUSTerminalRuleCall_10_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getStringSignPLUS_EQUALTerminalRuleCall_10_0_0_1()); }
	RULE_PLUS_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getStringSignPLUS_EQUALTerminalRuleCall_10_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__BitSignAlternatives_11_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getBitSignR_SHIFT_EQUALTerminalRuleCall_11_0_0_0()); }
	RULE_R_SHIFT_EQUAL
{ after(grammarAccess.getExpression_auxAccess().getBitSignR_SHIFT_EQUALTerminalRuleCall_11_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getBitSignL_SHIFTTerminalRuleCall_11_0_0_1()); }
	RULE_L_SHIFT
{ after(grammarAccess.getExpression_auxAccess().getBitSignL_SHIFTTerminalRuleCall_11_0_0_1()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getBitSignR_SHIFTTerminalRuleCall_11_0_0_2()); }
	RULE_R_SHIFT
{ after(grammarAccess.getExpression_auxAccess().getBitSignR_SHIFTTerminalRuleCall_11_0_0_2()); }
)

    |(
{ before(grammarAccess.getExpression_auxAccess().getBitSignSUPER_SHIFTTerminalRuleCall_11_0_0_3()); }
	RULE_SUPER_SHIFT
{ after(grammarAccess.getExpression_auxAccess().getBitSignSUPER_SHIFTTerminalRuleCall_11_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ampersand_Rule__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmpersand_RuleAccess().getA2Assignment_1_0()); }
(rule__Ampersand_Rule__A2Assignment_1_0)
{ after(grammarAccess.getAmpersand_RuleAccess().getA2Assignment_1_0()); }
)

    |(
{ before(grammarAccess.getAmpersand_RuleAccess().getEQUALTerminalRuleCall_1_1()); }
	RULE_EQUAL
{ after(grammarAccess.getAmpersand_RuleAccess().getEQUALTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getAlternatives_0()); }
(rule__Literal_Expression__Alternatives_0)
{ after(grammarAccess.getLiteral_ExpressionAccess().getAlternatives_0()); }
)

    |(
{ before(grammarAccess.getLiteral_ExpressionAccess().getExp2Assignment_1()); }
(rule__Literal_Expression__Exp2Assignment_1)
{ after(grammarAccess.getLiteral_ExpressionAccess().getExp2Assignment_1()); }
)

    |(
{ before(grammarAccess.getLiteral_ExpressionAccess().getStringAssignment_2()); }
(rule__Literal_Expression__StringAssignment_2)
{ after(grammarAccess.getLiteral_ExpressionAccess().getStringAssignment_2()); }
)

    |(
{ before(grammarAccess.getLiteral_ExpressionAccess().getCharAssignment_3()); }
(rule__Literal_Expression__CharAssignment_3)
{ after(grammarAccess.getLiteral_ExpressionAccess().getCharAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getGroup_0_0()); }
(rule__Literal_Expression__Group_0_0__0)
{ after(grammarAccess.getLiteral_ExpressionAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getLiteral_ExpressionAccess().getGroup_0_1()); }
(rule__Literal_Expression__Group_0_1__0)
{ after(grammarAccess.getLiteral_ExpressionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getGroup_1_0()); }
(rule__Creating_Expression__Group_1_0__0)
{ after(grammarAccess.getCreating_ExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1()); }
(rule__Creating_Expression__Group_1_1__0)
{ after(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getCreating_ExpressionAccess().getGroup_1_2()); }
(rule__Creating_Expression__Group_1_2__0)
{ after(grammarAccess.getCreating_ExpressionAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Alternatives_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1_2_0()); }
(rule__Creating_Expression__Group_1_1_2_0__0)
{ after(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1_2_0()); }
)

    |(
{ before(grammarAccess.getCreating_ExpressionAccess().getABSTerminalRuleCall_1_1_2_1()); }
	RULE_ABS
{ after(grammarAccess.getCreating_ExpressionAccess().getABSTerminalRuleCall_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_Expression_NR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_Expression_NRAccess().getGroup_0()); }
(rule__Logical_Expression_NR__Group_0__0)
{ after(grammarAccess.getLogical_Expression_NRAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLogical_Expression_NRAccess().getTrueAssignment_1()); }
(rule__Logical_Expression_NR__TrueAssignment_1)
{ after(grammarAccess.getLogical_Expression_NRAccess().getTrueAssignment_1()); }
)

    |(
{ before(grammarAccess.getLogical_Expression_NRAccess().getFalseAssignment_2()); }
(rule__Logical_Expression_NR__FalseAssignment_2)
{ after(grammarAccess.getLogical_Expression_NRAccess().getFalseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Numeric_Expression_NR__Sinal_numericAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericMINUSTerminalRuleCall_0_0_0()); }
	RULE_MINUS
{ after(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericMINUSTerminalRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericINCREMENTTerminalRuleCall_0_0_1()); }
	RULE_INCREMENT
{ after(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericINCREMENTTerminalRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericDECREMENTTerminalRuleCall_0_0_2()); }
	RULE_DECREMENT
{ after(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericDECREMENTTerminalRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getGroup_1_0()); }
(rule__Type__Group_1_0__0)
{ after(grammarAccess.getTypeAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getABSTerminalRuleCall_1_1()); }
	RULE_ABS
{ after(grammarAccess.getTypeAccess().getABSTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_specifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_specifierAccess().getBooleanKeyword_0()); }

	'boolean' 

{ after(grammarAccess.getType_specifierAccess().getBooleanKeyword_0()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getByteKeyword_1()); }

	'byte' 

{ after(grammarAccess.getType_specifierAccess().getByteKeyword_1()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getCharKeyword_2()); }

	'char' 

{ after(grammarAccess.getType_specifierAccess().getCharKeyword_2()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getShortKeyword_3()); }

	'short' 

{ after(grammarAccess.getType_specifierAccess().getShortKeyword_3()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getIntKeyword_4()); }

	'int' 

{ after(grammarAccess.getType_specifierAccess().getIntKeyword_4()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }

	'float' 

{ after(grammarAccess.getType_specifierAccess().getFloatKeyword_5()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getLongKeyword_6()); }

	'long' 

{ after(grammarAccess.getType_specifierAccess().getLongKeyword_6()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getDoubleKeyword_7()); }

	'double' 

{ after(grammarAccess.getType_specifierAccess().getDoubleKeyword_7()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getVoidKeyword_8()); }

	'void' 

{ after(grammarAccess.getType_specifierAccess().getVoidKeyword_8()); }
)

    |(
{ before(grammarAccess.getType_specifierAccess().getClass_nameParserRuleCall_9()); }
	ruleClass_name
{ after(grammarAccess.getType_specifierAccess().getClass_nameParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getMODTerminalRuleCall_0()); }
	RULE_MOD
{ after(grammarAccess.getModifierAccess().getMODTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getSTATICTerminalRuleCall_1()); }
	RULE_STATIC
{ after(grammarAccess.getModifierAccess().getSTATICTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_0()); }
(rule__Statement__Group_0__0)
{ after(grammarAccess.getStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getVariableAssignment_1()); }
(rule__Statement__VariableAssignment_1)
{ after(grammarAccess.getStatementAccess().getVariableAssignment_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExpressionxAssignment_2()); }
(rule__Statement__ExpressionxAssignment_2)
{ after(grammarAccess.getStatementAccess().getExpressionxAssignment_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementAssignment_3()); }
(rule__Statement__IfStatementAssignment_3)
{ after(grammarAccess.getStatementAccess().getIfStatementAssignment_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDoStatementAssignment_4()); }
(rule__Statement__DoStatementAssignment_4)
{ after(grammarAccess.getStatementAccess().getDoStatementAssignment_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementAssignment_5()); }
(rule__Statement__WhileStatementAssignment_5)
{ after(grammarAccess.getStatementAccess().getWhileStatementAssignment_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementAssignment_6()); }
(rule__Statement__ForStatementAssignment_6)
{ after(grammarAccess.getStatementAccess().getForStatementAssignment_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSwitchStatementAssignment_7()); }
(rule__Statement__SwitchStatementAssignment_7)
{ after(grammarAccess.getStatementAccess().getSwitchStatementAssignment_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStatement_blockParserRuleCall_8()); }
	ruleStatement_block
{ after(grammarAccess.getStatementAccess().getStatement_blockParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getTryAssignment_9()); }
(rule__Statement__TryAssignment_9)
{ after(grammarAccess.getStatementAccess().getTryAssignment_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_10()); }
(rule__Statement__Group_10__0)
{ after(grammarAccess.getStatementAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_11()); }
(rule__Statement__Group_11__0)
{ after(grammarAccess.getStatementAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_12()); }
(rule__Statement__Group_12__0)
{ after(grammarAccess.getStatementAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_13()); }
(rule__Statement__Group_13__0)
{ after(grammarAccess.getStatementAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getGroup_6_0()); }
(rule__Switch_Statement__Group_6_0__0)
{ after(grammarAccess.getSwitch_StatementAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getSwitch_StatementAccess().getGroup_6_1()); }
(rule__Switch_Statement__Group_6_1__0)
{ after(grammarAccess.getSwitch_StatementAccess().getGroup_6_1()); }
)

    |(
{ before(grammarAccess.getSwitch_StatementAccess().getStatementsAssignment_6_2()); }
(rule__Switch_Statement__StatementsAssignment_6_2)
{ after(grammarAccess.getSwitch_StatementAccess().getStatementsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getVariableAssignment_2_0()); }
(rule__For_Statement__VariableAssignment_2_0)
{ after(grammarAccess.getFor_StatementAccess().getVariableAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getFor_StatementAccess().getPvAssignment_2_1()); }
(rule__For_Statement__PvAssignment_2_1)
{ after(grammarAccess.getFor_StatementAccess().getPvAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getFor_StatementAccess().getGroup_2_2()); }
(rule__For_Statement__Group_2_2__0)
{ after(grammarAccess.getFor_StatementAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Return_value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturn_valueAccess().getNameAssignment_0()); }
(rule__Return_value__NameAssignment_0)
{ after(grammarAccess.getReturn_valueAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getReturn_valueAccess().getMethod_callParserRuleCall_1()); }
	ruleMethod_call
{ after(grammarAccess.getReturn_valueAccess().getMethod_callParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getReturn_valueAccess().getLiteral_ExpressionParserRuleCall_2()); }
	ruleLiteral_Expression
{ after(grammarAccess.getReturn_valueAccess().getLiteral_ExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getGroup_1_0()); }
(rule__Import_statement__Group_1_0__0)
{ after(grammarAccess.getImport_statementAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getImport_statementAccess().getGroup_1_1()); }
(rule__Import_statement__Group_1_1__0)
{ after(grammarAccess.getImport_statementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Compilation_unit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__0__Impl
	rule__Compilation_unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getCompilation_unitAction_0()); }
(

)
{ after(grammarAccess.getCompilation_unitAccess().getCompilation_unitAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_unit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__1__Impl
	rule__Compilation_unit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getPackageAssignment_1()); }
(rule__Compilation_unit__PackageAssignment_1)?
{ after(grammarAccess.getCompilation_unitAccess().getPackageAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_unit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__2__Impl
	rule__Compilation_unit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getImportsAssignment_2()); }
(rule__Compilation_unit__ImportsAssignment_2)*
{ after(grammarAccess.getCompilation_unitAccess().getImportsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compilation_unit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compilation_unit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getType_declarationsAssignment_3()); }
(rule__Compilation_unit__Type_declarationsAssignment_3)*
{ after(grammarAccess.getCompilation_unitAccess().getType_declarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Type_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__0__Impl
	rule__Type_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getDocAssignment_0()); }
(rule__Type_declaration__DocAssignment_0)?
{ after(grammarAccess.getType_declarationAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__1__Impl
	rule__Type_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getAlternatives_1()); }
(rule__Type_declaration__Alternatives_1)
{ after(grammarAccess.getType_declarationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
{ after(grammarAccess.getType_declarationAccess().getEOLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__0__Impl
	rule__Interface_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getModifiersAssignment_0()); }
(rule__Interface_declaration__ModifiersAssignment_0)*
{ after(grammarAccess.getInterface_declarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__1__Impl
	rule__Interface_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getINTERFACETerminalRuleCall_1()); }
	RULE_INTERFACE
{ after(grammarAccess.getInterface_declarationAccess().getINTERFACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__2__Impl
	rule__Interface_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfaceNameAssignment_2()); }
(rule__Interface_declaration__InterfaceNameAssignment_2)
{ after(grammarAccess.getInterface_declarationAccess().getInterfaceNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__3__Impl
	rule__Interface_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getGroup_3()); }
(rule__Interface_declaration__Group_3__0)?
{ after(grammarAccess.getInterface_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__4__Impl
	rule__Interface_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getR_CURLY_BRACETerminalRuleCall_4()); }
	RULE_R_CURLY_BRACE
{ after(grammarAccess.getInterface_declarationAccess().getR_CURLY_BRACETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__5__Impl
	rule__Interface_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getFieldsAssignment_5()); }
(rule__Interface_declaration__FieldsAssignment_5)*
{ after(grammarAccess.getInterface_declarationAccess().getFieldsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getL_CURLY_BRACETerminalRuleCall_6()); }
	RULE_L_CURLY_BRACE
{ after(grammarAccess.getInterface_declarationAccess().getL_CURLY_BRACETerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Interface_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3__0__Impl
	rule__Interface_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getInterface_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3__1__Impl
	rule__Interface_declaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getExtendAssignment_3_1()); }
(rule__Interface_declaration__ExtendAssignment_3_1)
{ after(grammarAccess.getInterface_declarationAccess().getExtendAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getGroup_3_2()); }
(rule__Interface_declaration__Group_3_2__0)*
{ after(grammarAccess.getInterface_declarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Interface_declaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3_2__0__Impl
	rule__Interface_declaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getCOMMATerminalRuleCall_3_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getInterface_declarationAccess().getCOMMATerminalRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Interface_declaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Interface_declaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getExtendsAssignment_3_2_1()); }
(rule__Interface_declaration__ExtendsAssignment_3_2_1)
{ after(grammarAccess.getInterface_declarationAccess().getExtendsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__0__Impl
	rule__Class_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getModifiersAssignment_0()); }
(rule__Class_declaration__ModifiersAssignment_0)*
{ after(grammarAccess.getClass_declarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__1__Impl
	rule__Class_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getClass_declarationAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__2__Impl
	rule__Class_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassNameAssignment_2()); }
(rule__Class_declaration__ClassNameAssignment_2)
{ after(grammarAccess.getClass_declarationAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__3__Impl
	rule__Class_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup_3()); }
(rule__Class_declaration__Group_3__0)?
{ after(grammarAccess.getClass_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__4__Impl
	rule__Class_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup_4()); }
(rule__Class_declaration__Group_4__0)?
{ after(grammarAccess.getClass_declarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__5__Impl
	rule__Class_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getR_CURLY_BRACETerminalRuleCall_5()); }
	RULE_R_CURLY_BRACE
{ after(grammarAccess.getClass_declarationAccess().getR_CURLY_BRACETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__6__Impl
	rule__Class_declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getFieldsAssignment_6()); }
(rule__Class_declaration__FieldsAssignment_6)*
{ after(grammarAccess.getClass_declarationAccess().getFieldsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getL_CURLY_BRACETerminalRuleCall_7()); }
	RULE_L_CURLY_BRACE
{ after(grammarAccess.getClass_declarationAccess().getL_CURLY_BRACETerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Class_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_3__0__Impl
	rule__Class_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
	RULE_EXTENDS
{ after(grammarAccess.getClass_declarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getExtendAssignment_3_1()); }
(rule__Class_declaration__ExtendAssignment_3_1)
{ after(grammarAccess.getClass_declarationAccess().getExtendAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class_declaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4__0__Impl
	rule__Class_declaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getImplementsKeyword_4_0()); }

	'implements' 

{ after(grammarAccess.getClass_declarationAccess().getImplementsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4__1__Impl
	rule__Class_declaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getImplementAssignment_4_1()); }
(rule__Class_declaration__ImplementAssignment_4_1)
{ after(grammarAccess.getClass_declarationAccess().getImplementAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getGroup_4_2()); }
(rule__Class_declaration__Group_4_2__0)*
{ after(grammarAccess.getClass_declarationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Class_declaration__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4_2__0__Impl
	rule__Class_declaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getCOMMATerminalRuleCall_4_2_0()); }
	RULE_COMMA
{ after(grammarAccess.getClass_declarationAccess().getCOMMATerminalRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class_declaration__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class_declaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getImplementsAssignment_4_2_1()); }
(rule__Class_declaration__ImplementsAssignment_4_2_1)
{ after(grammarAccess.getClass_declarationAccess().getImplementsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field_declaration__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_0__0__Impl
	rule__Field_declaration__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getDocAssignment_0_0()); }
(rule__Field_declaration__DocAssignment_0_0)?
{ after(grammarAccess.getField_declarationAccess().getDocAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_declaration__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_declaration__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getAlternatives_0_1()); }
(rule__Field_declaration__Alternatives_0_1)
{ after(grammarAccess.getField_declarationAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__0__Impl
	rule__Method_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getModifiersAssignment_0()); }
(rule__Method_declaration__ModifiersAssignment_0)*
{ after(grammarAccess.getMethod_declarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__1__Impl
	rule__Method_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getTypeAssignment_1()); }
(rule__Method_declaration__TypeAssignment_1)
{ after(grammarAccess.getMethod_declarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__2__Impl
	rule__Method_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getNameAssignment_2()); }
(rule__Method_declaration__NameAssignment_2)
{ after(grammarAccess.getMethod_declarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__3__Impl
	rule__Method_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getRIGHT_PARENTHESISTerminalRuleCall_3()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getMethod_declarationAccess().getRIGHT_PARENTHESISTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__4__Impl
	rule__Method_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getParameterAssignment_4()); }
(rule__Method_declaration__ParameterAssignment_4)?
{ after(grammarAccess.getMethod_declarationAccess().getParameterAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__5__Impl
	rule__Method_declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getLEFT_PARENTHESISTerminalRuleCall_5()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getMethod_declarationAccess().getLEFT_PARENTHESISTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__6__Impl
	rule__Method_declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getAlternatives_6()); }
(rule__Method_declaration__Alternatives_6)*
{ after(grammarAccess.getMethod_declarationAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getAlternatives_7()); }
(rule__Method_declaration__Alternatives_7)
{ after(grammarAccess.getMethod_declarationAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Method_declaration__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group_6_0__0__Impl
	rule__Method_declaration__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getR_ABSTerminalRuleCall_6_0_0()); }
	RULE_R_ABS
{ after(grammarAccess.getMethod_declarationAccess().getR_ABSTerminalRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_declaration__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_declaration__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getL_ABSTerminalRuleCall_6_0_1()); }
	RULE_L_ABS
{ after(grammarAccess.getMethod_declarationAccess().getL_ABSTerminalRuleCall_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method_call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_call__Group__0__Impl
	rule__Method_call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_callAccess().getNameAssignment_0()); }
(rule__Method_call__NameAssignment_0)
{ after(grammarAccess.getMethod_callAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_call__Group__1__Impl
	rule__Method_call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_callAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getMethod_callAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_call__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_call__Group__2__Impl
	rule__Method_call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_call__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_callAccess().getParameterAssignment_2()); }
(rule__Method_call__ParameterAssignment_2)?
{ after(grammarAccess.getMethod_callAccess().getParameterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method_call__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method_call__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method_call__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_callAccess().getLEFT_PARENTHESISTerminalRuleCall_3()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getMethod_callAccess().getLEFT_PARENTHESISTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constructor_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__0__Impl
	rule__Constructor_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getModifiersAssignment_0()); }
(rule__Constructor_declaration__ModifiersAssignment_0)*
{ after(grammarAccess.getConstructor_declarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__1__Impl
	rule__Constructor_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getNameAssignment_1()); }
(rule__Constructor_declaration__NameAssignment_1)
{ after(grammarAccess.getConstructor_declarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__2__Impl
	rule__Constructor_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getRIGHT_PARENTHESISTerminalRuleCall_2()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getConstructor_declarationAccess().getRIGHT_PARENTHESISTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__3__Impl
	rule__Constructor_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getParametersAssignment_3()); }
(rule__Constructor_declaration__ParametersAssignment_3)?
{ after(grammarAccess.getConstructor_declarationAccess().getParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__4__Impl
	rule__Constructor_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getLEFT_PARENTHESISTerminalRuleCall_4()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getConstructor_declarationAccess().getLEFT_PARENTHESISTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getStatementAssignment_5()); }
(rule__Constructor_declaration__StatementAssignment_5)
{ after(grammarAccess.getConstructor_declarationAccess().getStatementAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Parameter_list_method_call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list_method_call__Group__0__Impl
	rule__Parameter_list_method_call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list_method_call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_list_method_callAccess().getNameAssignment_0()); }
(rule__Parameter_list_method_call__NameAssignment_0)
{ after(grammarAccess.getParameter_list_method_callAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list_method_call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list_method_call__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list_method_call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_list_method_callAccess().getGroup_1()); }
(rule__Parameter_list_method_call__Group_1__0)*
{ after(grammarAccess.getParameter_list_method_callAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter_list_method_call__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list_method_call__Group_1__0__Impl
	rule__Parameter_list_method_call__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list_method_call__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_list_method_callAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getParameter_list_method_callAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list_method_call__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list_method_call__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list_method_call__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_list_method_callAccess().getParametersAssignment_1_1()); }
(rule__Parameter_list_method_call__ParametersAssignment_1_1)
{ after(grammarAccess.getParameter_list_method_callAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group__0__Impl
	rule__Parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParameterAssignment_0()); }
(rule__Parameter_list__ParameterAssignment_0)
{ after(grammarAccess.getParameter_listAccess().getParameterAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getGroup_1()); }
(rule__Parameter_list__Group_1__0)*
{ after(grammarAccess.getParameter_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group_1__0__Impl
	rule__Parameter_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getParameter_listAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1()); }
(rule__Parameter_list__ParametersAssignment_1_1)
{ after(grammarAccess.getParameter_listAccess().getParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getAlternatives_2()); }
(rule__Parameter__Alternatives_2)*
{ after(grammarAccess.getParameterAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2_0__0__Impl
	rule__Parameter__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getR_ABSTerminalRuleCall_2_0_0()); }
	RULE_R_ABS
{ after(grammarAccess.getParameterAccess().getR_ABSTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getL_ABSTerminalRuleCall_2_0_1()); }
	RULE_L_ABS
{ after(grammarAccess.getParameterAccess().getL_ABSTerminalRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__0__Impl
	rule__Variable_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getModifiersAssignment_0()); }
(rule__Variable_declaration__ModifiersAssignment_0)*
{ after(grammarAccess.getVariable_declarationAccess().getModifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__1__Impl
	rule__Variable_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getTypeAssignment_1()); }
(rule__Variable_declaration__TypeAssignment_1)
{ after(grammarAccess.getVariable_declarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__2__Impl
	rule__Variable_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNameAssignment_2()); }
(rule__Variable_declaration__NameAssignment_2)
{ after(grammarAccess.getVariable_declarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__3__Impl
	rule__Variable_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getGroup_3()); }
(rule__Variable_declaration__Group_3__0)*
{ after(grammarAccess.getVariable_declarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
{ after(grammarAccess.getVariable_declarationAccess().getEOLTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Variable_declaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_3__0__Impl
	rule__Variable_declaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getCOMMATerminalRuleCall_3_0()); }
	RULE_COMMA
{ after(grammarAccess.getVariable_declarationAccess().getCOMMATerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNamesAssignment_3_1()); }
(rule__Variable_declaration__NamesAssignment_3_1)
{ after(grammarAccess.getVariable_declarationAccess().getNamesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declarator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group__0__Impl
	rule__Variable_declarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getNameAssignment_0()); }
(rule__Variable_declarator__NameAssignment_0)
{ after(grammarAccess.getVariable_declaratorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group__1__Impl
	rule__Variable_declarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getAlternatives_1()); }
(rule__Variable_declarator__Alternatives_1)*
{ after(grammarAccess.getVariable_declaratorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getGroup_2()); }
(rule__Variable_declarator__Group_2__0)?
{ after(grammarAccess.getVariable_declaratorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_declarator__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_1_0__0__Impl
	rule__Variable_declarator__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getR_ABSTerminalRuleCall_1_0_0()); }
	RULE_R_ABS
{ after(grammarAccess.getVariable_declaratorAccess().getR_ABSTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getL_ABSTerminalRuleCall_1_0_1()); }
	RULE_L_ABS
{ after(grammarAccess.getVariable_declaratorAccess().getL_ABSTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declarator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_2__0__Impl
	rule__Variable_declarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getEQUALTerminalRuleCall_2_0()); }
	RULE_EQUAL
{ after(grammarAccess.getVariable_declaratorAccess().getEQUALTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declarator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declarator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getInitializerAssignment_2_1()); }
(rule__Variable_declarator__InitializerAssignment_2_1)
{ after(grammarAccess.getVariable_declaratorAccess().getInitializerAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_initializer__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1__0__Impl
	rule__Variable_initializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getVariable_initializerAction_1_0()); }
(

)
{ after(grammarAccess.getVariable_initializerAccess().getVariable_initializerAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1__1__Impl
	rule__Variable_initializer__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getR_CURLY_BRACETerminalRuleCall_1_1()); }
(	RULE_R_CURLY_BRACE)
{ after(grammarAccess.getVariable_initializerAccess().getR_CURLY_BRACETerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1__2__Impl
	rule__Variable_initializer__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getGroup_1_2()); }
(rule__Variable_initializer__Group_1_2__0)?
{ after(grammarAccess.getVariable_initializerAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getL_CURLY_BRACETerminalRuleCall_1_3()); }
	RULE_L_CURLY_BRACE
{ after(grammarAccess.getVariable_initializerAccess().getL_CURLY_BRACETerminalRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable_initializer__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_2__0__Impl
	rule__Variable_initializer__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getVariableInitializer1Assignment_1_2_0()); }
(rule__Variable_initializer__VariableInitializer1Assignment_1_2_0)
{ after(grammarAccess.getVariable_initializerAccess().getVariableInitializer1Assignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_2__1__Impl
	rule__Variable_initializer__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getGroup_1_2_1()); }
(rule__Variable_initializer__Group_1_2_1__0)*
{ after(grammarAccess.getVariable_initializerAccess().getGroup_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getCOMMATerminalRuleCall_1_2_2()); }
(	RULE_COMMA)?
{ after(grammarAccess.getVariable_initializerAccess().getCOMMATerminalRuleCall_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable_initializer__Group_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_2_1__0__Impl
	rule__Variable_initializer__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getCOMMATerminalRuleCall_1_2_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getVariable_initializerAccess().getCOMMATerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_initializer__Group_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_initializer__Group_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__Group_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getVariableIniatializer2Assignment_1_2_1_1()); }
(rule__Variable_initializer__VariableIniatializer2Assignment_1_2_1_1)
{ after(grammarAccess.getVariable_initializerAccess().getVariableIniatializer2Assignment_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0_0()); }
(rule__Expression__Group_0_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_0_1()); }
(rule__Expression__AuxAssignment_0_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNumericExpression3Assignment_0_0_0()); }
(rule__Expression__NumericExpression3Assignment_0_0_0)
{ after(grammarAccess.getExpressionAccess().getNumericExpression3Assignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLogicalExpressionAssignment_1_0()); }
(rule__Expression__LogicalExpressionAssignment_1_0)
{ after(grammarAccess.getExpressionAccess().getLogicalExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_1_1()); }
(rule__Expression__AuxAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__0__Impl
	rule__Expression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBitExpressionAssignment_2_0()); }
(rule__Expression__BitExpressionAssignment_2_0)
{ after(grammarAccess.getExpressionAccess().getBitExpressionAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_2_1()); }
(rule__Expression__AuxAssignment_2_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_3_0()); }
(rule__Expression__Group_3_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_3_1()); }
(rule__Expression__AuxAssignment_3_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCastExpressionAssignment_3_0_0()); }
(rule__Expression__CastExpressionAssignment_3_0_0)
{ after(grammarAccess.getExpressionAccess().getCastExpressionAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Expression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__0__Impl
	rule__Expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_4_0()); }
(rule__Expression__Group_4_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_4_1()); }
(rule__Expression__AuxAssignment_4_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCreatingExpressionAssignment_4_0_0()); }
(rule__Expression__CreatingExpressionAssignment_4_0_0)
{ after(grammarAccess.getExpressionAccess().getCreatingExpressionAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Expression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__0__Impl
	rule__Expression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteralExpressionAssignment_5_0()); }
(rule__Expression__LiteralExpressionAssignment_5_0)
{ after(grammarAccess.getExpressionAccess().getLiteralExpressionAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_5_1()); }
(rule__Expression__AuxAssignment_5_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__0__Impl
	rule__Expression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNullAssignment_6_0()); }
(rule__Expression__NullAssignment_6_0)
{ after(grammarAccess.getExpressionAccess().getNullAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_6_1()); }
(rule__Expression__AuxAssignment_6_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__0__Impl
	rule__Expression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSuperAssignment_7_0()); }
(rule__Expression__SuperAssignment_7_0)
{ after(grammarAccess.getExpressionAccess().getSuperAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_7_1()); }
(rule__Expression__AuxAssignment_7_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__0__Impl
	rule__Expression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getThisAssignment_8_0()); }
(rule__Expression__ThisAssignment_8_0)
{ after(grammarAccess.getExpressionAccess().getThisAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_8_1()); }
(rule__Expression__AuxAssignment_8_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9__0__Impl
	rule__Expression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNameAssignment_9_0()); }
(rule__Expression__NameAssignment_9_0)
{ after(grammarAccess.getExpressionAccess().getNameAssignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxAssignment_9_1()); }
(rule__Expression__AuxAssignment_9_1)
{ after(grammarAccess.getExpressionAccess().getAuxAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_0__0__Impl
	rule__Expression_aux__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getGroup_0_0()); }
(rule__Expression_aux__Group_0_0__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_0_1()); }
(rule__Expression_aux__AuxAssignment_0_1)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_0_0__0__Impl
	rule__Expression_aux__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getRIGHT_PARENTHESISTerminalRuleCall_0_0_0()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getExpression_auxAccess().getRIGHT_PARENTHESISTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_0_0__1__Impl
	rule__Expression_aux__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getArgListAssignment_0_0_1()); }
(rule__Expression_aux__ArgListAssignment_0_0_1)
{ after(grammarAccess.getExpression_auxAccess().getArgListAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getLEFT_PARENTHESISTerminalRuleCall_0_0_2()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getExpression_auxAccess().getLEFT_PARENTHESISTerminalRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_aux__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_1__0__Impl
	rule__Expression_aux__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getGroup_1_0()); }
(rule__Expression_aux__Group_1_0__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_1_1()); }
(rule__Expression_aux__AuxAssignment_1_1)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_1_0__0__Impl
	rule__Expression_aux__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getR_ABSTerminalRuleCall_1_0_0()); }
	RULE_R_ABS
{ after(grammarAccess.getExpression_auxAccess().getR_ABSTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_1_0__1__Impl
	rule__Expression_aux__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpression2Assignment_1_0_1()); }
(rule__Expression_aux__Expression2Assignment_1_0_1)
{ after(grammarAccess.getExpression_auxAccess().getExpression2Assignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getL_ABSTerminalRuleCall_1_0_2()); }
	RULE_L_ABS
{ after(grammarAccess.getExpression_auxAccess().getL_ABSTerminalRuleCall_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_aux__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_2__0__Impl
	rule__Expression_aux__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getGroup_2_0()); }
(rule__Expression_aux__Group_2_0__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_2_1()); }
(rule__Expression_aux__AuxAssignment_2_1)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_2_0__0__Impl
	rule__Expression_aux__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getFullStopKeyword_2_0_0()); }

	'.' 

{ after(grammarAccess.getExpression_auxAccess().getFullStopKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpression2Assignment_2_0_1()); }
(rule__Expression_aux__Expression2Assignment_2_0_1)
{ after(grammarAccess.getExpression_auxAccess().getExpression2Assignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_3__0__Impl
	rule__Expression_aux__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getGroup_3_0()); }
(rule__Expression_aux__Group_3_0__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_3_1()); }
(rule__Expression_aux__AuxAssignment_3_1)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_3_0__0__Impl
	rule__Expression_aux__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getCOMMATerminalRuleCall_3_0_0()); }
	RULE_COMMA
{ after(grammarAccess.getExpression_auxAccess().getCOMMATerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpression2Assignment_3_0_1()); }
(rule__Expression_aux__Expression2Assignment_3_0_1)
{ after(grammarAccess.getExpression_auxAccess().getExpression2Assignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_4__0__Impl
	rule__Expression_aux__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getGroup_4_0()); }
(rule__Expression_aux__Group_4_0__0)
{ after(grammarAccess.getExpression_auxAccess().getGroup_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_4_1()); }
(rule__Expression_aux__AuxAssignment_4_1)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_4_0__0__Impl
	rule__Expression_aux__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getINSTANCEOFTerminalRuleCall_4_0_0()); }
	RULE_INSTANCEOF
{ after(grammarAccess.getExpression_auxAccess().getINSTANCEOFTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getNameAssignment_4_0_1()); }
(rule__Expression_aux__NameAssignment_4_0_1)
{ after(grammarAccess.getExpression_auxAccess().getNameAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_5__0__Impl
	rule__Expression_aux__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getSginAssignment_5_0()); }
(rule__Expression_aux__SginAssignment_5_0)
{ after(grammarAccess.getExpression_auxAccess().getSginAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_5_1()); }
(rule__Expression_aux__AuxAssignment_5_1)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_aux__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_6__0__Impl
	rule__Expression_aux__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignAssignment_6_0()); }
(rule__Expression_aux__NumericSignAssignment_6_0)
{ after(grammarAccess.getExpression_auxAccess().getNumericSignAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_6__1__Impl
	rule__Expression_aux__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp2Assignment_6_1()); }
(rule__Expression_aux__Exp2Assignment_6_1)
{ after(grammarAccess.getExpression_auxAccess().getExp2Assignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_6_2()); }
(rule__Expression_aux__AuxAssignment_6_2)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_aux__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_7__0__Impl
	rule__Expression_aux__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignAssignment_7_0()); }
(rule__Expression_aux__TestingSignAssignment_7_0)
{ after(grammarAccess.getExpression_auxAccess().getTestingSignAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_7__1__Impl
	rule__Expression_aux__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1Assignment_7_1()); }
(rule__Expression_aux__Exp1Assignment_7_1)
{ after(grammarAccess.getExpression_auxAccess().getExp1Assignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_7_2()); }
(rule__Expression_aux__AuxAssignment_7_2)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_aux__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_8__0__Impl
	rule__Expression_aux__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAlternatives_8_0()); }
(rule__Expression_aux__Alternatives_8_0)
{ after(grammarAccess.getExpression_auxAccess().getAlternatives_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_8__1__Impl
	rule__Expression_aux__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1Assignment_8_1()); }
(rule__Expression_aux__Exp1Assignment_8_1)
{ after(grammarAccess.getExpression_auxAccess().getExp1Assignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_8_2()); }
(rule__Expression_aux__AuxAssignment_8_2)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_aux__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_9__0__Impl
	rule__Expression_aux__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getWATTerminalRuleCall_9_0()); }
	RULE_WAT
{ after(grammarAccess.getExpression_auxAccess().getWATTerminalRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_9__1__Impl
	rule__Expression_aux__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1Assignment_9_1()); }
(rule__Expression_aux__Exp1Assignment_9_1)
{ after(grammarAccess.getExpression_auxAccess().getExp1Assignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_9__2__Impl
	rule__Expression_aux__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getCOLONTerminalRuleCall_9_2()); }
	RULE_COLON
{ after(grammarAccess.getExpression_auxAccess().getCOLONTerminalRuleCall_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_9__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_9__3__Impl
	rule__Expression_aux__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_9__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp2Assignment_9_3()); }
(rule__Expression_aux__Exp2Assignment_9_3)
{ after(grammarAccess.getExpression_auxAccess().getExp2Assignment_9_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_9__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_9__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_9__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_9_4()); }
(rule__Expression_aux__AuxAssignment_9_4)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_9_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Expression_aux__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_10__0__Impl
	rule__Expression_aux__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getStringSignAssignment_10_0()); }
(rule__Expression_aux__StringSignAssignment_10_0)
{ after(grammarAccess.getExpression_auxAccess().getStringSignAssignment_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_10__1__Impl
	rule__Expression_aux__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1Assignment_10_1()); }
(rule__Expression_aux__Exp1Assignment_10_1)
{ after(grammarAccess.getExpression_auxAccess().getExp1Assignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_10_2()); }
(rule__Expression_aux__AuxAssignment_10_2)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression_aux__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_11__0__Impl
	rule__Expression_aux__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getBitSignAssignment_11_0()); }
(rule__Expression_aux__BitSignAssignment_11_0)
{ after(grammarAccess.getExpression_auxAccess().getBitSignAssignment_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_11__1__Impl
	rule__Expression_aux__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpressionBitAssignment_11_1()); }
(rule__Expression_aux__ExpressionBitAssignment_11_1)
{ after(grammarAccess.getExpression_auxAccess().getExpressionBitAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_aux__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_aux__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxAssignment_11_2()); }
(rule__Expression_aux__AuxAssignment_11_2)
{ after(grammarAccess.getExpression_auxAccess().getAuxAssignment_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ampersand_Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ampersand_Rule__Group__0__Impl
	rule__Ampersand_Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ampersand_Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmpersand_RuleAccess().getA1Assignment_0()); }
(rule__Ampersand_Rule__A1Assignment_0)
{ after(grammarAccess.getAmpersand_RuleAccess().getA1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ampersand_Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ampersand_Rule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ampersand_Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmpersand_RuleAccess().getAlternatives_1()); }
(rule__Ampersand_Rule__Alternatives_1)?
{ after(grammarAccess.getAmpersand_RuleAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Float_Literal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float_Literal__Group__0__Impl
	rule__Float_Literal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getDecimalDigits1Assignment_0()); }
(rule__Float_Literal__DecimalDigits1Assignment_0)
{ after(grammarAccess.getFloat_LiteralAccess().getDecimalDigits1Assignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Float_Literal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float_Literal__Group__1__Impl
	rule__Float_Literal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFloat_LiteralAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Float_Literal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float_Literal__Group__2__Impl
	rule__Float_Literal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getDecimalDigits2Assignment_2()); }
(rule__Float_Literal__DecimalDigits2Assignment_2)?
{ after(grammarAccess.getFloat_LiteralAccess().getDecimalDigits2Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Float_Literal__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float_Literal__Group__3__Impl
	rule__Float_Literal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getExpAssignment_3()); }
(rule__Float_Literal__ExpAssignment_3)?
{ after(grammarAccess.getFloat_LiteralAccess().getExpAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Float_Literal__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Float_Literal__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getFloatTypeSufixAssignment_4()); }
(rule__Float_Literal__FloatTypeSufixAssignment_4)?
{ after(grammarAccess.getFloat_LiteralAccess().getFloatTypeSufixAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Literal_Expression__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal_Expression__Group_0_0__0__Impl
	rule__Literal_Expression__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getExpAssignment_0_0_0()); }
(rule__Literal_Expression__ExpAssignment_0_0_0)
{ after(grammarAccess.getLiteral_ExpressionAccess().getExpAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal_Expression__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal_Expression__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getLONGTerminalRuleCall_0_0_1()); }
(	RULE_LONG)?
{ after(grammarAccess.getLiteral_ExpressionAccess().getLONGTerminalRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal_Expression__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal_Expression__Group_0_1__0__Impl
	rule__Literal_Expression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getExp1Assignment_0_1_0()); }
(rule__Literal_Expression__Exp1Assignment_0_1_0)
{ after(grammarAccess.getLiteral_ExpressionAccess().getExp1Assignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal_Expression__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal_Expression__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getLONGTerminalRuleCall_0_1_1()); }
(	RULE_LONG)?
{ after(grammarAccess.getLiteral_ExpressionAccess().getLONGTerminalRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Creating_Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group__0__Impl
	rule__Creating_Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getNEWTerminalRuleCall_0()); }
	RULE_NEW
{ after(grammarAccess.getCreating_ExpressionAccess().getNEWTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getAlternatives_1()); }
(rule__Creating_Expression__Alternatives_1)
{ after(grammarAccess.getCreating_ExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Creating_Expression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_0__0__Impl
	rule__Creating_Expression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getClassNameAssignment_1_0_0()); }
(rule__Creating_Expression__ClassNameAssignment_1_0_0)
{ after(grammarAccess.getCreating_ExpressionAccess().getClassNameAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_0__1__Impl
	rule__Creating_Expression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getRIGHT_PARENTHESISTerminalRuleCall_1_0_1()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getCreating_ExpressionAccess().getRIGHT_PARENTHESISTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_0__2__Impl
	rule__Creating_Expression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getArgListAssignment_1_0_2()); }
(rule__Creating_Expression__ArgListAssignment_1_0_2)
{ after(grammarAccess.getCreating_ExpressionAccess().getArgListAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getLEFT_PARENTHESISTerminalRuleCall_1_0_3()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getCreating_ExpressionAccess().getLEFT_PARENTHESISTerminalRuleCall_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Creating_Expression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1__0__Impl
	rule__Creating_Expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getTypeSpecifierAssignment_1_1_0()); }
(rule__Creating_Expression__TypeSpecifierAssignment_1_1_0)
{ after(grammarAccess.getCreating_ExpressionAccess().getTypeSpecifierAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1__1__Impl
	rule__Creating_Expression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1_1()); }
(rule__Creating_Expression__Group_1_1_1__0)?
{ after(grammarAccess.getCreating_ExpressionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getAlternatives_1_1_2()); }
(rule__Creating_Expression__Alternatives_1_1_2)*
{ after(grammarAccess.getCreating_ExpressionAccess().getAlternatives_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Creating_Expression__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1_1__0__Impl
	rule__Creating_Expression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getR_ABSTerminalRuleCall_1_1_1_0()); }
	RULE_R_ABS
{ after(grammarAccess.getCreating_ExpressionAccess().getR_ABSTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1_1__1__Impl
	rule__Creating_Expression__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getExpressionAssignment_1_1_1_1()); }
(rule__Creating_Expression__ExpressionAssignment_1_1_1_1)
{ after(grammarAccess.getCreating_ExpressionAccess().getExpressionAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getL_ABSTerminalRuleCall_1_1_1_2()); }
	RULE_L_ABS
{ after(grammarAccess.getCreating_ExpressionAccess().getL_ABSTerminalRuleCall_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Creating_Expression__Group_1_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1_2_0__0__Impl
	rule__Creating_Expression__Group_1_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getR_ABSTerminalRuleCall_1_1_2_0_0()); }
	RULE_R_ABS
{ after(grammarAccess.getCreating_ExpressionAccess().getR_ABSTerminalRuleCall_1_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_1_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getL_ABSTerminalRuleCall_1_1_2_0_1()); }
	RULE_L_ABS
{ after(grammarAccess.getCreating_ExpressionAccess().getL_ABSTerminalRuleCall_1_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Creating_Expression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_2__0__Impl
	rule__Creating_Expression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getRIGHT_PARENTHESISTerminalRuleCall_1_2_0()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getCreating_ExpressionAccess().getRIGHT_PARENTHESISTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_2__1__Impl
	rule__Creating_Expression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getExpressionAssignment_1_2_1()); }
(rule__Creating_Expression__ExpressionAssignment_1_2_1)
{ after(grammarAccess.getCreating_ExpressionAccess().getExpressionAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Creating_Expression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Creating_Expression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getLEFT_PARENTHESISTerminalRuleCall_1_2_2()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getCreating_ExpressionAccess().getLEFT_PARENTHESISTerminalRuleCall_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cast_Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_Expression__Group__0__Impl
	rule__Cast_Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_ExpressionAccess().getRIGHT_PARENTHESISTerminalRuleCall_0()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getCast_ExpressionAccess().getRIGHT_PARENTHESISTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_Expression__Group__1__Impl
	rule__Cast_Expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_ExpressionAccess().getTypeAssignment_1()); }
(rule__Cast_Expression__TypeAssignment_1)
{ after(grammarAccess.getCast_ExpressionAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_Expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_Expression__Group__2__Impl
	rule__Cast_Expression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_Expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_ExpressionAccess().getLEFT_PARENTHESISTerminalRuleCall_2()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getCast_ExpressionAccess().getLEFT_PARENTHESISTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast_Expression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast_Expression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_Expression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_ExpressionAccess().getExpressionAssignment_3()); }
(rule__Cast_Expression__ExpressionAssignment_3)
{ after(grammarAccess.getCast_ExpressionAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Bit_Expression_NR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bit_Expression_NR__Group__0__Impl
	rule__Bit_Expression_NR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bit_Expression_NR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBit_Expression_NRAccess().getNOTTerminalRuleCall_0()); }
	RULE_NOT
{ after(grammarAccess.getBit_Expression_NRAccess().getNOTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bit_Expression_NR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bit_Expression_NR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bit_Expression_NR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBit_Expression_NRAccess().getExpressionAssignment_1()); }
(rule__Bit_Expression_NR__ExpressionAssignment_1)
{ after(grammarAccess.getBit_Expression_NRAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Logical_Expression_NR__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_Expression_NR__Group_0__0__Impl
	rule__Logical_Expression_NR__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_Expression_NR__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_Expression_NRAccess().getEXCLAMATIONTerminalRuleCall_0_0()); }
	RULE_EXCLAMATION
{ after(grammarAccess.getLogical_Expression_NRAccess().getEXCLAMATIONTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Logical_Expression_NR__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Logical_Expression_NR__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_Expression_NR__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_Expression_NRAccess().getExpressionAssignment_0_1()); }
(rule__Logical_Expression_NR__ExpressionAssignment_0_1)
{ after(grammarAccess.getLogical_Expression_NRAccess().getExpressionAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arg_List__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg_List__Group__0__Impl
	rule__Arg_List__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg_List__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArg_ListAccess().getExpressionAssignment_0()); }
(rule__Arg_List__ExpressionAssignment_0)
{ after(grammarAccess.getArg_ListAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg_List__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg_List__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg_List__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArg_ListAccess().getGroup_1()); }
(rule__Arg_List__Group_1__0)*
{ after(grammarAccess.getArg_ListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Arg_List__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg_List__Group_1__0__Impl
	rule__Arg_List__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg_List__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArg_ListAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getArg_ListAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Arg_List__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Arg_List__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arg_List__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArg_ListAccess().getExpressionsAssignment_1_1()); }
(rule__Arg_List__ExpressionsAssignment_1_1)
{ after(grammarAccess.getArg_ListAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Numeric_Expression_NR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Numeric_Expression_NR__Group__0__Impl
	rule__Numeric_Expression_NR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Numeric_Expression_NR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericAssignment_0()); }
(rule__Numeric_Expression_NR__Sinal_numericAssignment_0)
{ after(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Numeric_Expression_NR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Numeric_Expression_NR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Numeric_Expression_NR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getExpressionAssignment_1()); }
(rule__Numeric_Expression_NR__ExpressionAssignment_1)
{ after(grammarAccess.getNumeric_Expression_NRAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_0()); }
(rule__Type__NameAssignment_0)
{ after(grammarAccess.getTypeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getAlternatives_1()); }
(rule__Type__Alternatives_1)*
{ after(grammarAccess.getTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_0__0__Impl
	rule__Type__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getR_ABSTerminalRuleCall_1_0_0()); }
	RULE_R_ABS
{ after(grammarAccess.getTypeAccess().getR_ABSTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getL_ABSTerminalRuleCall_1_0_1()); }
	RULE_L_ABS
{ after(grammarAccess.getTypeAccess().getL_ABSTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Static_initializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static_initializer__Group__0__Impl
	rule__Static_initializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getStaticAssignment_0()); }
(rule__Static_initializer__StaticAssignment_0)
{ after(grammarAccess.getStatic_initializerAccess().getStaticAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Static_initializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static_initializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getNameAssignment_1()); }
(rule__Static_initializer__NameAssignment_1)
{ after(grammarAccess.getStatic_initializerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__0__Impl
	rule__Statement_block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getStatement_blockAction_0()); }
(

)
{ after(grammarAccess.getStatement_blockAccess().getStatement_blockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__1__Impl
	rule__Statement_block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getR_CURLY_BRACETerminalRuleCall_1()); }
	RULE_R_CURLY_BRACE
{ after(grammarAccess.getStatement_blockAccess().getR_CURLY_BRACETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__2__Impl
	rule__Statement_block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getStatementsAssignment_2()); }
(rule__Statement_block__StatementsAssignment_2)*
{ after(grammarAccess.getStatement_blockAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getL_CURLY_BRACETerminalRuleCall_3()); }
	RULE_L_CURLY_BRACE
{ after(grammarAccess.getStatement_blockAccess().getL_CURLY_BRACETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturn_StatementAction_0_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getReturn_StatementAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnSmtAssignment_0_1()); }
(rule__Statement__ReturnSmtAssignment_0_1)
{ after(grammarAccess.getStatementAccess().getReturnSmtAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__0__Impl
	rule__Statement__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameAssignment_10_0()); }
(rule__Statement__NameAssignment_10_0)
{ after(grammarAccess.getStatementAccess().getNameAssignment_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__1__Impl
	rule__Statement__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getCOLONTerminalRuleCall_10_1()); }
	RULE_COLON
{ after(grammarAccess.getStatementAccess().getCOLONTerminalRuleCall_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAssignment_10_2()); }
(rule__Statement__StatementAssignment_10_2)
{ after(grammarAccess.getStatementAccess().getStatementAssignment_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__0__Impl
	rule__Statement__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_11_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__1__Impl
	rule__Statement__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getBreakKeyword_11_1()); }

	'break' 

{ after(grammarAccess.getStatementAccess().getBreakKeyword_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__2__Impl
	rule__Statement__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameAssignment_11_2()); }
(rule__Statement__NameAssignment_11_2)?
{ after(grammarAccess.getStatementAccess().getNameAssignment_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_11__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_11__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_11_3()); }
	RULE_EOL
{ after(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__0__Impl
	rule__Statement__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_12_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__1__Impl
	rule__Statement__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getContinueKeyword_12_1()); }

	'continue' 

{ after(grammarAccess.getStatementAccess().getContinueKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__2__Impl
	rule__Statement__Group_12__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameAssignment_12_2()); }
(rule__Statement__NameAssignment_12_2)?
{ after(grammarAccess.getStatementAccess().getNameAssignment_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_12__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_12__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_12__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_12_3()); }
	RULE_EOL
{ after(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_12_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__0__Impl
	rule__Statement__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementAction_13_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getStatementAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_13_1()); }
	RULE_EOL
{ after(grammarAccess.getStatementAccess().getEOLTerminalRuleCall_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Switch_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__0__Impl
	rule__Switch_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getSwitch_StatementAction_0()); }
(

)
{ after(grammarAccess.getSwitch_StatementAccess().getSwitch_StatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__1__Impl
	rule__Switch_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getSWITCHTerminalRuleCall_1()); }
	RULE_SWITCH
{ after(grammarAccess.getSwitch_StatementAccess().getSWITCHTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__2__Impl
	rule__Switch_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_2()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getSwitch_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__3__Impl
	rule__Switch_Statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getExpressionAssignment_3()); }
(rule__Switch_Statement__ExpressionAssignment_3)
{ after(grammarAccess.getSwitch_StatementAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__4__Impl
	rule__Switch_Statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_4()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getSwitch_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__5__Impl
	rule__Switch_Statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getR_CURLY_BRACETerminalRuleCall_5()); }
	RULE_R_CURLY_BRACE
{ after(grammarAccess.getSwitch_StatementAccess().getR_CURLY_BRACETerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__6__Impl
	rule__Switch_Statement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getAlternatives_6()); }
(rule__Switch_Statement__Alternatives_6)*
{ after(grammarAccess.getSwitch_StatementAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getL_CURLY_BRACETerminalRuleCall_7()); }
	RULE_L_CURLY_BRACE
{ after(grammarAccess.getSwitch_StatementAccess().getL_CURLY_BRACETerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Switch_Statement__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group_6_0__0__Impl
	rule__Switch_Statement__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getCASETerminalRuleCall_6_0_0()); }
	RULE_CASE
{ after(grammarAccess.getSwitch_StatementAccess().getCASETerminalRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group_6_0__1__Impl
	rule__Switch_Statement__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getExpressionsAssignment_6_0_1()); }
(rule__Switch_Statement__ExpressionsAssignment_6_0_1)
{ after(grammarAccess.getSwitch_StatementAccess().getExpressionsAssignment_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group_6_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group_6_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group_6_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getCOLONTerminalRuleCall_6_0_2()); }
	RULE_COLON
{ after(grammarAccess.getSwitch_StatementAccess().getCOLONTerminalRuleCall_6_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Switch_Statement__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group_6_1__0__Impl
	rule__Switch_Statement__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getDEFAULTTerminalRuleCall_6_1_0()); }
	RULE_DEFAULT
{ after(grammarAccess.getSwitch_StatementAccess().getDEFAULTTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Switch_Statement__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Switch_Statement__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getCOLONTerminalRuleCall_6_1_1()); }
	RULE_COLON
{ after(grammarAccess.getSwitch_StatementAccess().getCOLONTerminalRuleCall_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__For_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__0__Impl
	rule__For_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getFORTerminalRuleCall_0()); }
	RULE_FOR
{ after(grammarAccess.getFor_StatementAccess().getFORTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__1__Impl
	rule__For_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getFor_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__2__Impl
	rule__For_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getAlternatives_2()); }
(rule__For_Statement__Alternatives_2)
{ after(grammarAccess.getFor_StatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__3__Impl
	rule__For_Statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getExpression2Assignment_3()); }
(rule__For_Statement__Expression2Assignment_3)?
{ after(grammarAccess.getFor_StatementAccess().getExpression2Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__4__Impl
	rule__For_Statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getEOLTerminalRuleCall_4()); }
	RULE_EOL
{ after(grammarAccess.getFor_StatementAccess().getEOLTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__5__Impl
	rule__For_Statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getExpression3Assignment_5()); }
(rule__For_Statement__Expression3Assignment_5)?
{ after(grammarAccess.getFor_StatementAccess().getExpression3Assignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__6__Impl
	rule__For_Statement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getEOLTerminalRuleCall_6()); }
	RULE_EOL
{ after(grammarAccess.getFor_StatementAccess().getEOLTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__7__Impl
	rule__For_Statement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_7()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getFor_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getStatementAssignment_8()); }
(rule__For_Statement__StatementAssignment_8)
{ after(grammarAccess.getFor_StatementAccess().getStatementAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__For_Statement__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group_2_2__0__Impl
	rule__For_Statement__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getExpressionAssignment_2_2_0()); }
(rule__For_Statement__ExpressionAssignment_2_2_0)
{ after(grammarAccess.getFor_StatementAccess().getExpressionAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_Statement__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_Statement__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getEOLTerminalRuleCall_2_2_1()); }
	RULE_EOL
{ after(grammarAccess.getFor_StatementAccess().getEOLTerminalRuleCall_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__While_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__0__Impl
	rule__While_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getWHILETerminalRuleCall_0()); }
	RULE_WHILE
{ after(grammarAccess.getWhile_StatementAccess().getWHILETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__1__Impl
	rule__While_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getWhile_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__2__Impl
	rule__While_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getExpressionAssignment_2()); }
(rule__While_Statement__ExpressionAssignment_2)
{ after(grammarAccess.getWhile_StatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__3__Impl
	rule__While_Statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_3()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getWhile_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_Statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_Statement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getStatementAssignment_4()); }
(rule__While_Statement__StatementAssignment_4)
{ after(grammarAccess.getWhile_StatementAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Do_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__0__Impl
	rule__Do_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getDOTerminalRuleCall_0()); }
	RULE_DO
{ after(grammarAccess.getDo_StatementAccess().getDOTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__1__Impl
	rule__Do_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getStatementAssignment_1()); }
(rule__Do_Statement__StatementAssignment_1)
{ after(grammarAccess.getDo_StatementAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__2__Impl
	rule__Do_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getWHILETerminalRuleCall_2()); }
	RULE_WHILE
{ after(grammarAccess.getDo_StatementAccess().getWHILETerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__3__Impl
	rule__Do_Statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_3()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getDo_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__4__Impl
	rule__Do_Statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getExpressionAssignment_4()); }
(rule__Do_Statement__ExpressionAssignment_4)
{ after(grammarAccess.getDo_StatementAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__5__Impl
	rule__Do_Statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_5()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getDo_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do_Statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do_Statement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getEOLTerminalRuleCall_6()); }
	RULE_EOL
{ after(grammarAccess.getDo_StatementAccess().getEOLTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__If_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group__0__Impl
	rule__If_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getIFTerminalRuleCall_0()); }
	RULE_IF
{ after(grammarAccess.getIf_StatementAccess().getIFTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group__1__Impl
	rule__If_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
	RULE_RIGHT_PARENTHESIS
{ after(grammarAccess.getIf_StatementAccess().getRIGHT_PARENTHESISTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group__2__Impl
	rule__If_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getExpressionAssignment_2()); }
(rule__If_Statement__ExpressionAssignment_2)
{ after(grammarAccess.getIf_StatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group__3__Impl
	rule__If_Statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_3()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getIf_StatementAccess().getLEFT_PARENTHESISTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_Statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group__4__Impl
	rule__If_Statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getStatementAssignment_4()); }
(rule__If_Statement__StatementAssignment_4)
{ after(grammarAccess.getIf_StatementAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_Statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getGroup_5()); }
(rule__If_Statement__Group_5__0)?
{ after(grammarAccess.getIf_StatementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__If_Statement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group_5__0__Impl
	rule__If_Statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getELSETerminalRuleCall_5_0()); }
(	RULE_ELSE)
{ after(grammarAccess.getIf_StatementAccess().getELSETerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_Statement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_Statement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getElseStatementAssignment_5_1()); }
(rule__If_Statement__ElseStatementAssignment_5_1)
{ after(grammarAccess.getIf_StatementAccess().getElseStatementAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Return_Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return_Statement__Group__0__Impl
	rule__Return_Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Return_Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturn_StatementAccess().getReturn_StatementAction_0()); }
(

)
{ after(grammarAccess.getReturn_StatementAccess().getReturn_StatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return_Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return_Statement__Group__1__Impl
	rule__Return_Statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Return_Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturn_StatementAccess().getRETURNTerminalRuleCall_1()); }
	RULE_RETURN
{ after(grammarAccess.getReturn_StatementAccess().getRETURNTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return_Statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return_Statement__Group__2__Impl
	rule__Return_Statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Return_Statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturn_StatementAccess().getRvAssignment_2()); }
(rule__Return_Statement__RvAssignment_2)?
{ after(grammarAccess.getReturn_StatementAccess().getRvAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Return_Statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Return_Statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Return_Statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturn_StatementAccess().getEOLTerminalRuleCall_3()); }
	RULE_EOL
{ after(grammarAccess.getReturn_StatementAccess().getEOLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Try_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__0__Impl
	rule__Try_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryAssignment_0()); }
(rule__Try_statement__TryAssignment_0)
{ after(grammarAccess.getTry_statementAccess().getTryAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__1__Impl
	rule__Try_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryStatementAssignment_1()); }
(rule__Try_statement__TryStatementAssignment_1)
{ after(grammarAccess.getTry_statementAccess().getTryStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__2__Impl
	rule__Try_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getGroup_2()); }
(rule__Try_statement__Group_2__0)*
{ after(grammarAccess.getTry_statementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getGroup_3()); }
(rule__Try_statement__Group_3__0)?
{ after(grammarAccess.getTry_statementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Try_statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__0__Impl
	rule__Try_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchsAssignment_2_0()); }
(rule__Try_statement__CatchsAssignment_2_0)
{ after(grammarAccess.getTry_statementAccess().getCatchsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__1__Impl
	rule__Try_statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getRIGHT_PARENTHESISparametersAssignment_2_1()); }
(rule__Try_statement__RIGHT_PARENTHESISparametersAssignment_2_1)
{ after(grammarAccess.getTry_statementAccess().getRIGHT_PARENTHESISparametersAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__2__Impl
	rule__Try_statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getLEFT_PARENTHESISTerminalRuleCall_2_2()); }
	RULE_LEFT_PARENTHESIS
{ after(grammarAccess.getTry_statementAccess().getLEFT_PARENTHESISTerminalRuleCall_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchStatementsAssignment_2_3()); }
(rule__Try_statement__CatchStatementsAssignment_2_3)
{ after(grammarAccess.getTry_statementAccess().getCatchStatementsAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Try_statement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_3__0__Impl
	rule__Try_statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyAssignment_3_0()); }
(rule__Try_statement__FinallyAssignment_3_0)
{ after(grammarAccess.getTry_statementAccess().getFinallyAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Try_statement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Try_statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyStatementAssignment_3_1()); }
(rule__Try_statement__FinallyStatementAssignment_3_1)
{ after(grammarAccess.getTry_statementAccess().getFinallyStatementAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_statement__Group__0__Impl
	rule__Package_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getPACKAGETerminalRuleCall_0()); }
	RULE_PACKAGE
{ after(grammarAccess.getPackage_statementAccess().getPACKAGETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_statement__Group__1__Impl
	rule__Package_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getNameAssignment_1()); }
(rule__Package_statement__NameAssignment_1)
{ after(grammarAccess.getPackage_statementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getEOLTerminalRuleCall_2()); }
	RULE_EOL
{ after(grammarAccess.getPackage_statementAccess().getEOLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Package_name__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name__Group__0__Impl
	rule__Package_name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_nameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getPackage_nameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_name__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_nameAccess().getPackage_name_auxParserRuleCall_1()); }
	rulePackage_name_aux
{ after(grammarAccess.getPackage_nameAccess().getPackage_name_auxParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package_name_aux__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name_aux__Group__0__Impl
	rule__Package_name_aux__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name_aux__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_name_auxAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getPackage_name_auxAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package_name_aux__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package_name_aux__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package_name_aux__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_name_auxAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getPackage_name_auxAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group__0__Impl
	rule__Import_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getIMPORTTerminalRuleCall_0()); }
	RULE_IMPORT
{ after(grammarAccess.getImport_statementAccess().getIMPORTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getAlternatives_1()); }
(rule__Import_statement__Alternatives_1)
{ after(grammarAccess.getImport_statementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_statement__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_0__0__Impl
	rule__Import_statement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getClassnameAssignment_1_0_0()); }
(rule__Import_statement__ClassnameAssignment_1_0_0)
{ after(grammarAccess.getImport_statementAccess().getClassnameAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getEOLTerminalRuleCall_1_0_1()); }
	RULE_EOL
{ after(grammarAccess.getImport_statementAccess().getEOLTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import_statement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_1__0__Impl
	rule__Import_statement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getPackagenameAssignment_1_1_0()); }
(rule__Import_statement__PackagenameAssignment_1_1_0)
{ after(grammarAccess.getImport_statementAccess().getPackagenameAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_1__1__Impl
	rule__Import_statement__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getFullStopKeyword_1_1_1()); }

	'.' 

{ after(grammarAccess.getImport_statementAccess().getFullStopKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_1__2__Impl
	rule__Import_statement__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getMULTIPLYTerminalRuleCall_1_1_2()); }
	RULE_MULTIPLY
{ after(grammarAccess.getImport_statementAccess().getMULTIPLYTerminalRuleCall_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_1__3__Impl
	rule__Import_statement__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getEOLTerminalRuleCall_1_1_3()); }
	RULE_EOL
{ after(grammarAccess.getImport_statementAccess().getEOLTerminalRuleCall_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import_statement__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import_statement__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getEOLTerminalRuleCall_1_1_4()); }
	RULE_EOL
{ after(grammarAccess.getImport_statementAccess().getEOLTerminalRuleCall_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EXPOENT_PART__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPOENT_PART__Group__0__Impl
	rule__EXPOENT_PART__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPOENT_PART__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPOENT_PARTAccess().getEXPONENTIALTerminalRuleCall_0()); }
	RULE_EXPONENTIAL
{ after(grammarAccess.getEXPOENT_PARTAccess().getEXPONENTIALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EXPOENT_PART__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EXPOENT_PART__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPOENT_PART__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEXPOENT_PARTAccess().getDECIMAL_DIGITSTerminalRuleCall_1()); }
	RULE_DECIMAL_DIGITS
{ after(grammarAccess.getEXPOENT_PARTAccess().getDECIMAL_DIGITSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Head__ElementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getElementsCompilation_unitParserRuleCall_0()); }
	ruleCompilation_unit{ after(grammarAccess.getHeadAccess().getElementsCompilation_unitParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__PackageAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getPackagePackage_statementParserRuleCall_1_0()); }
	rulePackage_statement{ after(grammarAccess.getCompilation_unitAccess().getPackagePackage_statementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__ImportsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getImportsImport_statementParserRuleCall_2_0()); }
	ruleImport_statement{ after(grammarAccess.getCompilation_unitAccess().getImportsImport_statementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Compilation_unit__Type_declarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompilation_unitAccess().getType_declarationsType_declarationParserRuleCall_3_0()); }
	ruleType_declaration{ after(grammarAccess.getCompilation_unitAccess().getType_declarationsType_declarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getDocDOC_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOC_COMMENT{ after(grammarAccess.getType_declarationAccess().getDocDOC_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getNameClass_declarationParserRuleCall_1_0_0()); }
	ruleClass_declaration{ after(grammarAccess.getType_declarationAccess().getNameClass_declarationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type_declaration__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_declarationAccess().getNameInterface_declarationParserRuleCall_1_1_0()); }
	ruleInterface_declaration{ after(grammarAccess.getType_declarationAccess().getNameInterface_declarationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getInterface_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__InterfaceNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getInterfaceNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getInterface_declarationAccess().getInterfaceNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__ExtendAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getExtendInterface_nameParserRuleCall_3_1_0()); }
	ruleInterface_name{ after(grammarAccess.getInterface_declarationAccess().getExtendInterface_nameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__ExtendsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getExtendsInterface_nameParserRuleCall_3_2_1_0()); }
	ruleInterface_name{ after(grammarAccess.getInterface_declarationAccess().getExtendsInterface_nameParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Interface_declaration__FieldsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterface_declarationAccess().getFieldsField_declarationParserRuleCall_5_0()); }
	ruleField_declaration{ after(grammarAccess.getInterface_declarationAccess().getFieldsField_declarationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getClass_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getClassNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getClass_declarationAccess().getClassNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ExtendAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getExtendClass_nameParserRuleCall_3_1_0()); }
	ruleClass_name{ after(grammarAccess.getClass_declarationAccess().getExtendClass_nameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ImplementAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getImplementInterface_nameParserRuleCall_4_1_0()); }
	ruleInterface_name{ after(grammarAccess.getClass_declarationAccess().getImplementInterface_nameParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__ImplementsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getImplementsInterface_nameParserRuleCall_4_2_1_0()); }
	ruleInterface_name{ after(grammarAccess.getClass_declarationAccess().getImplementsInterface_nameParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class_declaration__FieldsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClass_declarationAccess().getFieldsField_declarationParserRuleCall_6_0()); }
	ruleField_declaration{ after(grammarAccess.getClass_declarationAccess().getFieldsField_declarationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__DocAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getDocDOC_COMMENTTerminalRuleCall_0_0_0()); }
	RULE_DOC_COMMENT{ after(grammarAccess.getField_declarationAccess().getDocDOC_COMMENTTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__NameAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getNameVariable_declarationParserRuleCall_0_1_0_0()); }
	ruleVariable_declaration{ after(grammarAccess.getField_declarationAccess().getNameVariable_declarationParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__NameAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getNameConstructor_declarationParserRuleCall_0_1_1_0()); }
	ruleConstructor_declaration{ after(grammarAccess.getField_declarationAccess().getNameConstructor_declarationParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__NameAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getNameMethod_declarationParserRuleCall_0_1_2_0()); }
	ruleMethod_declaration{ after(grammarAccess.getField_declarationAccess().getNameMethod_declarationParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getNameStatic_initializerParserRuleCall_1_0()); }
	ruleStatic_initializer{ after(grammarAccess.getField_declarationAccess().getNameStatic_initializerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getNameMethod_callParserRuleCall_2_0()); }
	ruleMethod_call{ after(grammarAccess.getField_declarationAccess().getNameMethod_callParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_declaration__DebugAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_declarationAccess().getDebugEOLTerminalRuleCall_3_0()); }
	RULE_EOL{ after(grammarAccess.getField_declarationAccess().getDebugEOLTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getMethod_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getMethod_declarationAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMethod_declarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__ParameterAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getParameterParameter_listParserRuleCall_4_0()); }
	ruleParameter_list{ after(grammarAccess.getMethod_declarationAccess().getParameterParameter_listParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__StatementAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getStatementStatement_blockParserRuleCall_7_0_0()); }
	ruleStatement_block{ after(grammarAccess.getMethod_declarationAccess().getStatementStatement_blockParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_declaration__DebugAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_declarationAccess().getDebugEOLTerminalRuleCall_7_1_0()); }
	RULE_EOL{ after(grammarAccess.getMethod_declarationAccess().getDebugEOLTerminalRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_call__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_callAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getMethod_callAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method_call__ParameterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethod_callAccess().getParameterParameter_list_method_callParserRuleCall_2_0()); }
	ruleParameter_list_method_call{ after(grammarAccess.getMethod_callAccess().getParameterParameter_list_method_callParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getConstructor_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstructor_declarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__ParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getParametersParameter_listParserRuleCall_3_0()); }
	ruleParameter_list{ after(grammarAccess.getConstructor_declarationAccess().getParametersParameter_listParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor_declaration__StatementAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructor_declarationAccess().getStatementStatement_blockParserRuleCall_5_0()); }
	ruleStatement_block{ after(grammarAccess.getConstructor_declarationAccess().getStatementStatement_blockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list_method_call__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_list_method_callAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParameter_list_method_callAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list_method_call__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_list_method_callAccess().getParametersIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getParameter_list_method_callAccess().getParametersIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__ParameterAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParameterParameterParserRuleCall_0_0()); }
	ruleParameter{ after(grammarAccess.getParameter_listAccess().getParameterParameterParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_list__ParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_listAccess().getParametersParameterParserRuleCall_1_1_0()); }
	ruleParameter{ after(grammarAccess.getParameter_listAccess().getParametersParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__ModifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getVariable_declarationAccess().getModifiersModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getVariable_declarationAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNameVariable_declaratorParserRuleCall_2_0()); }
	ruleVariable_declarator{ after(grammarAccess.getVariable_declarationAccess().getNameVariable_declaratorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration__NamesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declarationAccess().getNamesVariable_declaratorParserRuleCall_3_1_0()); }
	ruleVariable_declarator{ after(grammarAccess.getVariable_declarationAccess().getNamesVariable_declaratorParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVariable_declaratorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declarator__InitializerAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaratorAccess().getInitializerVariable_initializerParserRuleCall_2_1_0()); }
	ruleVariable_initializer{ after(grammarAccess.getVariable_declaratorAccess().getInitializerVariable_initializerParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getVariable_initializerAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__VariableInitializer1Assignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getVariableInitializer1Variable_initializerParserRuleCall_1_2_0_0()); }
	ruleVariable_initializer{ after(grammarAccess.getVariable_initializerAccess().getVariableInitializer1Variable_initializerParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_initializer__VariableIniatializer2Assignment_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_initializerAccess().getVariableIniatializer2Variable_initializerParserRuleCall_1_2_1_1_0()); }
	ruleVariable_initializer{ after(grammarAccess.getVariable_initializerAccess().getVariableIniatializer2Variable_initializerParserRuleCall_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NumericExpression3Assignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNumericExpression3Numeric_Expression_NRParserRuleCall_0_0_0_0()); }
	ruleNumeric_Expression_NR{ after(grammarAccess.getExpressionAccess().getNumericExpression3Numeric_Expression_NRParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_0_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LogicalExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLogicalExpressionLogical_Expression_NRParserRuleCall_1_0_0()); }
	ruleLogical_Expression_NR{ after(grammarAccess.getExpressionAccess().getLogicalExpressionLogical_Expression_NRParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_1_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__BitExpressionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBitExpressionBit_Expression_NRParserRuleCall_2_0_0()); }
	ruleBit_Expression_NR{ after(grammarAccess.getExpressionAccess().getBitExpressionBit_Expression_NRParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_2_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CastExpressionAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCastExpressionCast_ExpressionParserRuleCall_3_0_0_0()); }
	ruleCast_Expression{ after(grammarAccess.getExpressionAccess().getCastExpressionCast_ExpressionParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_3_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CreatingExpressionAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCreatingExpressionCreating_ExpressionParserRuleCall_4_0_0_0()); }
	ruleCreating_Expression{ after(grammarAccess.getExpressionAccess().getCreatingExpressionCreating_ExpressionParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_4_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LiteralExpressionAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteralExpressionLiteral_ExpressionParserRuleCall_5_0_0()); }
	ruleLiteral_Expression{ after(grammarAccess.getExpressionAccess().getLiteralExpressionLiteral_ExpressionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_5_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NullAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNullNULLTerminalRuleCall_6_0_0()); }
	RULE_NULL{ after(grammarAccess.getExpressionAccess().getNullNULLTerminalRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_6_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SuperAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSuperSUPERTerminalRuleCall_7_0_0()); }
	RULE_SUPER{ after(grammarAccess.getExpressionAccess().getSuperSUPERTerminalRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_7_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ThisAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getThisTHISTerminalRuleCall_8_0_0()); }
	RULE_THIS{ after(grammarAccess.getExpressionAccess().getThisTHISTerminalRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_8_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NameAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_9_0_0()); }
	RULE_ID{ after(grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AuxAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_9_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpressionAccess().getAuxExpression_auxParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__ArgListAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getArgListArg_ListParserRuleCall_0_0_1_0()); }
	ruleArg_List{ after(grammarAccess.getExpression_auxAccess().getArgListArg_ListParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_0_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Expression2Assignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpression2ExpressionParserRuleCall_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExpression2ExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_1_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Expression2Assignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpression2ExpressionParserRuleCall_2_0_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExpression2ExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_2_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Expression2Assignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpression2ExpressionParserRuleCall_3_0_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExpression2ExpressionParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_3_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__NameAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getNameClass_nameParserRuleCall_4_0_1_0()); }
	ruleClass_name{ after(grammarAccess.getExpression_auxAccess().getNameClass_nameParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_4_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__SginAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getSginAlternatives_5_0_0()); }
(rule__Expression_aux__SginAlternatives_5_0_0)
{ after(grammarAccess.getExpression_auxAccess().getSginAlternatives_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_5_1_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__NumericSignAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getNumericSignAlternatives_6_0_0()); }
(rule__Expression_aux__NumericSignAlternatives_6_0_0)
{ after(grammarAccess.getExpression_auxAccess().getNumericSignAlternatives_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Exp2Assignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp2ExpressionParserRuleCall_6_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExp2ExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_6_2_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__TestingSignAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getTestingSignAlternatives_7_0_0()); }
(rule__Expression_aux__TestingSignAlternatives_7_0_0)
{ after(grammarAccess.getExpression_auxAccess().getTestingSignAlternatives_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Exp1Assignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_7_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_7_2_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__LogicalSignAssignment_8_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getLogicalSignAlternatives_8_0_0_0()); }
(rule__Expression_aux__LogicalSignAlternatives_8_0_0_0)
{ after(grammarAccess.getExpression_auxAccess().getLogicalSignAlternatives_8_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AmpersandAssignment_8_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAmpersandAmpersand_RuleParserRuleCall_8_0_1_0()); }
	ruleAmpersand_Rule{ after(grammarAccess.getExpression_auxAccess().getAmpersandAmpersand_RuleParserRuleCall_8_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Exp1Assignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_8_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_8_2_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Exp1Assignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_9_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Exp2Assignment_9_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp2ExpressionParserRuleCall_9_3_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExp2ExpressionParserRuleCall_9_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_9_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_9_4_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_9_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__StringSignAssignment_10_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getStringSignAlternatives_10_0_0()); }
(rule__Expression_aux__StringSignAlternatives_10_0_0)
{ after(grammarAccess.getExpression_auxAccess().getStringSignAlternatives_10_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__Exp1Assignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_10_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExp1ExpressionParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_10_2_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__BitSignAssignment_11_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getBitSignAlternatives_11_0_0()); }
(rule__Expression_aux__BitSignAlternatives_11_0_0)
{ after(grammarAccess.getExpression_auxAccess().getBitSignAlternatives_11_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__ExpressionBitAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getExpressionBitExpressionParserRuleCall_11_1_0()); }
	ruleExpression{ after(grammarAccess.getExpression_auxAccess().getExpressionBitExpressionParserRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_aux__AuxAssignment_11_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_11_2_0()); }
	ruleExpression_aux{ after(grammarAccess.getExpression_auxAccess().getAuxExpression_auxParserRuleCall_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ampersand_Rule__A1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmpersand_RuleAccess().getA1AMPERSANDTerminalRuleCall_0_0()); }
	RULE_AMPERSAND{ after(grammarAccess.getAmpersand_RuleAccess().getA1AMPERSANDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ampersand_Rule__A2Assignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAmpersand_RuleAccess().getA2AMPERSANDTerminalRuleCall_1_0_0()); }
	RULE_AMPERSAND{ after(grammarAccess.getAmpersand_RuleAccess().getA2AMPERSANDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__DecimalDigits1Assignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getDecimalDigits1DECIMAL_DIGITSTerminalRuleCall_0_0()); }
	RULE_DECIMAL_DIGITS{ after(grammarAccess.getFloat_LiteralAccess().getDecimalDigits1DECIMAL_DIGITSTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__DecimalDigits2Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getDecimalDigits2DECIMAL_DIGITSTerminalRuleCall_2_0()); }
	RULE_DECIMAL_DIGITS{ after(grammarAccess.getFloat_LiteralAccess().getDecimalDigits2DECIMAL_DIGITSTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__ExpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getExpEXPOENT_PARTParserRuleCall_3_0()); }
	ruleEXPOENT_PART{ after(grammarAccess.getFloat_LiteralAccess().getExpEXPOENT_PARTParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Float_Literal__FloatTypeSufixAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloat_LiteralAccess().getFloatTypeSufixFLOAT_TYPE_SUFIXTerminalRuleCall_4_0()); }
	RULE_FLOAT_TYPE_SUFIX{ after(grammarAccess.getFloat_LiteralAccess().getFloatTypeSufixFLOAT_TYPE_SUFIXTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__ExpAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getExpHEXATerminalRuleCall_0_0_0_0()); }
	RULE_HEXA{ after(grammarAccess.getLiteral_ExpressionAccess().getExpHEXATerminalRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Exp1Assignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getExp1DECIMAL_DIGITSTerminalRuleCall_0_1_0_0()); }
	RULE_DECIMAL_DIGITS{ after(grammarAccess.getLiteral_ExpressionAccess().getExp1DECIMAL_DIGITSTerminalRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__Exp2Assignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getExp2Float_LiteralParserRuleCall_1_0()); }
	ruleFloat_Literal{ after(grammarAccess.getLiteral_ExpressionAccess().getExp2Float_LiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__StringAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getLiteral_ExpressionAccess().getStringSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_Expression__CharAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteral_ExpressionAccess().getCharCHARTerminalRuleCall_3_0()); }
	RULE_CHAR{ after(grammarAccess.getLiteral_ExpressionAccess().getCharCHARTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__ClassNameAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getClassNameClass_nameParserRuleCall_1_0_0_0()); }
	ruleClass_name{ after(grammarAccess.getCreating_ExpressionAccess().getClassNameClass_nameParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__ArgListAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getArgListArg_ListParserRuleCall_1_0_2_0()); }
	ruleArg_List{ after(grammarAccess.getCreating_ExpressionAccess().getArgListArg_ListParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__TypeSpecifierAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getTypeSpecifierType_specifierParserRuleCall_1_1_0_0()); }
	ruleType_specifier{ after(grammarAccess.getCreating_ExpressionAccess().getTypeSpecifierType_specifierParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__ExpressionAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getExpressionExpressionParserRuleCall_1_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getCreating_ExpressionAccess().getExpressionExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Creating_Expression__ExpressionAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCreating_ExpressionAccess().getExpressionExpressionParserRuleCall_1_2_1_0()); }
	ruleExpression{ after(grammarAccess.getCreating_ExpressionAccess().getExpressionExpressionParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_Expression__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_ExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getCast_ExpressionAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast_Expression__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCast_ExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getCast_ExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bit_Expression_NR__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBit_Expression_NRAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getBit_Expression_NRAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_Expression_NR__ExpressionAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_Expression_NRAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
	ruleExpression{ after(grammarAccess.getLogical_Expression_NRAccess().getExpressionExpressionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_Expression_NR__TrueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_Expression_NRAccess().getTrueTRUETerminalRuleCall_1_0()); }
	RULE_TRUE{ after(grammarAccess.getLogical_Expression_NRAccess().getTrueTRUETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Logical_Expression_NR__FalseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogical_Expression_NRAccess().getFalseFALSETerminalRuleCall_2_0()); }
	RULE_FALSE{ after(grammarAccess.getLogical_Expression_NRAccess().getFalseFALSETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg_List__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArg_ListAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getArg_ListAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Arg_List__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArg_ListAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getArg_ListAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Numeric_Expression_NR__Sinal_numericAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericAlternatives_0_0()); }
(rule__Numeric_Expression_NR__Sinal_numericAlternatives_0_0)
{ after(grammarAccess.getNumeric_Expression_NRAccess().getSinal_numericAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Numeric_Expression_NR__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumeric_Expression_NRAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getNumeric_Expression_NRAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameType_specifierParserRuleCall_0_0()); }
	ruleType_specifier{ after(grammarAccess.getTypeAccess().getNameType_specifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__StaticAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getStaticSTATICTerminalRuleCall_0_0()); }
	RULE_STATIC{ after(grammarAccess.getStatic_initializerAccess().getStaticSTATICTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Static_initializer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatic_initializerAccess().getNameStatement_blockParserRuleCall_1_0()); }
	ruleStatement_block{ after(grammarAccess.getStatic_initializerAccess().getNameStatement_blockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_block__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_blockAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getStatement_blockAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ReturnSmtAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getReturnSmtReturn_StatementParserRuleCall_0_1_0()); }
	ruleReturn_Statement{ after(grammarAccess.getStatementAccess().getReturnSmtReturn_StatementParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVariableVariable_declarationParserRuleCall_1_0()); }
	ruleVariable_declaration{ after(grammarAccess.getStatementAccess().getVariableVariable_declarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ExpressionxAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getExpressionxExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getStatementAccess().getExpressionxExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfStatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getIfStatementIf_StatementParserRuleCall_3_0()); }
	ruleIf_Statement{ after(grammarAccess.getStatementAccess().getIfStatementIf_StatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__DoStatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDoStatementDo_StatementParserRuleCall_4_0()); }
	ruleDo_Statement{ after(grammarAccess.getStatementAccess().getDoStatementDo_StatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__WhileStatementAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getWhileStatementWhile_StatementParserRuleCall_5_0()); }
	ruleWhile_Statement{ after(grammarAccess.getStatementAccess().getWhileStatementWhile_StatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__ForStatementAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getForStatementFor_StatementParserRuleCall_6_0()); }
	ruleFor_Statement{ after(grammarAccess.getStatementAccess().getForStatementFor_StatementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SwitchStatementAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSwitchStatementSwitch_StatementParserRuleCall_7_0()); }
	ruleSwitch_Statement{ after(grammarAccess.getStatementAccess().getSwitchStatementSwitch_StatementParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__TryAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getTryTry_statementParserRuleCall_9_0()); }
	ruleTry_statement{ after(grammarAccess.getStatementAccess().getTryTry_statementParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_10_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_10_0_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_10_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementAssignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_10_2_0()); }
	ruleStatement{ after(grammarAccess.getStatementAccess().getStatementStatementParserRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_11_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_11_2_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__NameAssignment_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_12_2_0()); }
	RULE_ID{ after(grammarAccess.getStatementAccess().getNameIDTerminalRuleCall_12_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSwitch_StatementAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__ExpressionsAssignment_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getExpressionsExpressionParserRuleCall_6_0_1_0()); }
	ruleExpression{ after(grammarAccess.getSwitch_StatementAccess().getExpressionsExpressionParserRuleCall_6_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Switch_Statement__StatementsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitch_StatementAccess().getStatementsStatementParserRuleCall_6_2_0()); }
	ruleStatement{ after(grammarAccess.getSwitch_StatementAccess().getStatementsStatementParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__VariableAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getVariableVariable_declarationParserRuleCall_2_0_0()); }
	ruleVariable_declaration{ after(grammarAccess.getFor_StatementAccess().getVariableVariable_declarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__PvAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getPvEOLTerminalRuleCall_2_1_0()); }
	RULE_EOL{ after(grammarAccess.getFor_StatementAccess().getPvEOLTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__ExpressionAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getExpressionExpressionParserRuleCall_2_2_0_0()); }
	ruleExpression{ after(grammarAccess.getFor_StatementAccess().getExpressionExpressionParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Expression2Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getExpression2ExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getFor_StatementAccess().getExpression2ExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__Expression3Assignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getExpression3ExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getFor_StatementAccess().getExpression3ExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_Statement__StatementAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_StatementAccess().getStatementStatementParserRuleCall_8_0()); }
	ruleStatement{ after(grammarAccess.getFor_StatementAccess().getStatementStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhile_StatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While_Statement__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_StatementAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getWhile_StatementAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDo_StatementAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do_Statement__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDo_StatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDo_StatementAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIf_StatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getIf_StatementAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__If_Statement__ElseStatementAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_StatementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
	ruleStatement{ after(grammarAccess.getIf_StatementAccess().getElseStatementStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Return_Statement__RvAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturn_StatementAccess().getRvReturn_valueParserRuleCall_2_0()); }
	ruleReturn_value{ after(grammarAccess.getReturn_StatementAccess().getRvReturn_valueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Return_value__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturn_valueAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getReturn_valueAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__TryAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryTRYTerminalRuleCall_0_0()); }
	RULE_TRY{ after(grammarAccess.getTry_statementAccess().getTryTRYTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__TryStatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getTryStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getTry_statementAccess().getTryStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__CatchsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchsCATCHTerminalRuleCall_2_0_0()); }
	RULE_CATCH{ after(grammarAccess.getTry_statementAccess().getCatchsCATCHTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__RIGHT_PARENTHESISparametersAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getRIGHT_PARENTHESISparametersParameterParserRuleCall_2_1_0()); }
	ruleParameter{ after(grammarAccess.getTry_statementAccess().getRIGHT_PARENTHESISparametersParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__CatchStatementsAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getCatchStatementsStatementParserRuleCall_2_3_0()); }
	ruleStatement{ after(grammarAccess.getTry_statementAccess().getCatchStatementsStatementParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__FinallyAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyFINALLYTerminalRuleCall_3_0_0()); }
	RULE_FINALLY{ after(grammarAccess.getTry_statementAccess().getFinallyFINALLYTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Try_statement__FinallyStatementAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTry_statementAccess().getFinallyStatementStatementParserRuleCall_3_1_0()); }
	ruleStatement{ after(grammarAccess.getTry_statementAccess().getFinallyStatementStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package_statement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackage_statementAccess().getNamePackage_nameParserRuleCall_1_0()); }
	rulePackage_name{ after(grammarAccess.getPackage_statementAccess().getNamePackage_nameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__ClassnameAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getClassnameClass_nameParserRuleCall_1_0_0_0()); }
	ruleClass_name{ after(grammarAccess.getImport_statementAccess().getClassnameClass_nameParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import_statement__PackagenameAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImport_statementAccess().getPackagenamePackage_nameParserRuleCall_1_1_0_0()); }
	rulePackage_name{ after(grammarAccess.getImport_statementAccess().getPackagenamePackage_nameParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_INTERFACE : 'interface';

RULE_EXTENDS : 'extends';

RULE_COMMA : ',';

RULE_R_CURLY_BRACE : '{';

RULE_L_CURLY_BRACE : '}';

RULE_ABS : '[]';

RULE_R_ABS : '[';

RULE_L_ABS : ']';

RULE_EQUAL : '=';

RULE_NULL : 'NULL';

RULE_THIS : 'this';

RULE_SUPER : 'super';

RULE_INSTANCEOF : 'instanceof';

RULE_L_SHIFT : '<<';

RULE_R_SHIFT : '>>';

RULE_SUPER_SHIFT : '>>>';

RULE_R_SHIFT_EQUAL : '>>=';

RULE_DOUBLE_OR_EQUAL : '||=';

RULE_OR : '|';

RULE_OR_EQUAL : '|=';

RULE_EXP : '^';

RULE_EXP_EQUAL : '^=';

RULE_DOUBLE_EQUAL : '==';

RULE_DIFFERENT : '!=';

RULE_BT : '>';

RULE_ST : '<';

RULE_BE : '>=';

RULE_SE : '<=';

RULE_DIVIDE : '/';

RULE_DIVIDE_EQUAL : '/=';

RULE_MODULE : '%';

RULE_MODULE_EQUAL : '%=';

RULE_PLUS_EQUAL : '+=';

RULE_MINUS_EQUAL : '-=';

RULE_MULTIPLY : '*';

RULE_MULTIPLY_EQUAL : '*=';

RULE_WAT : '?';

RULE_AMPERSAND : 'ampersand';

RULE_EXPONENTIAL : ('e'|'e+'|'e-');

RULE_LONG : 'l';

RULE_STRING : '"' ( options {greedy=false;} : . )*'"';

RULE_COLON : ':';

RULE_NEW : 'new';

RULE_NOT : '~';

RULE_EXCLAMATION : '!';

RULE_FALSE : 'false';

RULE_TRUE : 'true';

RULE_DECREMENT : '--';

RULE_INCREMENT : '++';

RULE_STATIC : 'static';

RULE_DEFAULT : 'default';

RULE_CASE : 'case';

RULE_SWITCH : 'switch';

RULE_FOR : 'for';

RULE_RETURN : 'return';

RULE_RIGHT_PARENTHESIS : '(';

RULE_LEFT_PARENTHESIS : ')';

RULE_EOL : ';';

RULE_IF : 'if';

RULE_ELSE : 'else';

RULE_DO : 'do';

RULE_WHILE : 'while';

RULE_PACKAGE : 'package';

RULE_IMPORT : 'import';

RULE_CHAR : '\'' . '\'';

RULE_PLUS : '+';

RULE_MINUS : '-';

RULE_MOD : ('public'|'private'|'protected'|'final'|'native'|'synchronized'|'abstract'|'threadsafe'|'transient');

RULE_TRY : 'try';

RULE_CATCH : 'catch';

RULE_FINALLY : 'finally';

RULE_FLOAT_TYPE_SUFIX : ('f'|'d');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'$'|'\u00C0'..'\uFFFF')*;

RULE_HEXA : '0' 'x' ('0'..'9' 'a'..'f')*;

RULE_DECIMAL_DIGITS : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

RULE_DOC_COMMENT : '/**';


